# 0 "C:/Work/zephyrproject/zephyr/misc/empty_file.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/stm32h747i_disco_stm32h747xx_m7.dts" 1






/dts-v1/;
# 1 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h747Xi_m7.dtsi" 1 3 4






# 1 "C:/Work/zephyrproject/zephyr/dts/common/mem.h" 1 3 4
# 8 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h747Xi_m7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h747.dtsi" 1 3 4






# 1 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h745.dtsi" 1 3 4






# 1 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7_dualcore.dtsi" 1 3 4






# 1 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 1 3 4
# 11 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 3 4
# 1 "C:/Work/zephyrproject/zephyr/dts/arm/armv7-m.dtsi" 1 3 4


# 1 "C:/Work/zephyrproject/zephyr/dts/common/skeleton.dtsi" 1 3 4
# 9 "C:/Work/zephyrproject/zephyr/dts/common/skeleton.dtsi" 3 4
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
# 4 "C:/Work/zephyrproject/zephyr/dts/arm/armv7-m.dtsi" 2 3 4

/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;

  nvic: interrupt-controller@e000e100 {
   #address-cells = <1>;
   compatible = "arm,v7m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };

  systick: timer@e000e010 {
   compatible = "arm,armv7m-systick";
   reg = <0xe000e010 0x10>;
  };
 };
};
# 12 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32h7_clock.h" 1 3 4
# 9 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32h7_clock.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32_common_clocks.h" 1 3 4
# 10 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32h7_clock.h" 2 3 4
# 13 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/gpio/gpio.h" 1 3 4
# 14 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/i2c/i2c.h" 1 3 4
# 15 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/pwm.h" 1 3 4
# 16 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/stm32_pwm.h" 1 3 4
# 17 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/dma/stm32_dma.h" 1 3 4
# 18 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32h7_adc.h" 1 3 4
# 9 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32h7_adc.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 1 3 4
# 9 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 1 3 4
# 9 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 1 3 4
# 19 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 1 3 4
# 34 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 1 3 4
# 18 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 1 3 4
# 1083 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_listify.h" 1 3 4
# 1084 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 2 3 4
# 19 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 162 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal_is_eq.h" 1 3 4
# 163 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 193 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_inc.h" 1 3 4
# 194 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_dec.h" 1 3 4
# 197 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_x2.h" 1 3 4
# 200 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 35 "C:/Work/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 2 3 4
# 20 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 2 3 4
# 10 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 2 3 4
# 10 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 2 3 4
# 10 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32h7_adc.h" 2 3 4
# 19 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32h7_reset.h" 1 3 4
# 10 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32h7_reset.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32-common.h" 1 3 4
# 11 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32h7_reset.h" 2 3 4
# 20 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4

# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/memory-controller/stm32-fmc-sdram.h" 1 3 4
# 22 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/memory-attr/memory-attr.h" 1 3 4
# 23 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/memory-attr/memory-attr-arm.h" 1 3 4
# 24 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/dts/common/freq.h" 1 3 4
# 25 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 2 3 4

/ {
 chosen {
  zephyr,entropy = &rng;
  zephyr,flash-controller = &flash;
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu0: cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m7";
   reg = <0>;
   #address-cells = <1>;
   #size-cells = <1>;

   mpu: mpu@e000ed90 {
    compatible = "arm,armv7m-mpu";
    reg = <0xe000ed90 0x40>;
   };
  };
 };

 ext_memory: memory@90000000 {
  compatible = "zephyr,memory-region";
  reg = <0x90000000 (((256) * 1024) * 1024)>;
  zephyr,memory-region = "EXTMEM";
  zephyr,memory-attr = <( (((1UL << (5))) << (20)) )>;
 };

 clocks {
  #address-cells = <1>;
  #size-cells = <0>;

  clk_hse: clk-hse {
   #clock-cells = <0>;
   compatible = "st,stm32-hse-clock";
   status = "disabled";
  };

  clk_hsi: clk-hsi {
   #clock-cells = <0>;
   compatible = "st,stm32h7-hsi-clock";
   hsi-div = <1>;
   clock-frequency = <(((64) * 1000) * 1000)>;
   status = "disabled";
  };

  clk_hsi48: clk-hsi48 {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <(((48) * 1000) * 1000)>;
   status = "disabled";
  };

  clk_csi: clk-csi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <(((4) * 1000) * 1000)>;
   status = "disabled";
  };

  clk_lse: clk-lse {
   #clock-cells = <0>;
   compatible = "st,stm32-lse-clock";
   clock-frequency = <32768>;
   driving-capability = <0>;
   status = "disabled";
  };

  clk_lsi: clk-lsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((32) * 1000)>;
   status = "disabled";
  };

  pll: pll@0 {
   #clock-cells = <0>;
   compatible = "st,stm32h7-pll-clock";
   reg = <0>;
   status = "disabled";
  };

  pll2: pll@1 {
   #clock-cells = <0>;
   compatible = "st,stm32h7-pll-clock";
   reg = <1>;
   status = "disabled";
  };

  pll3: pll@2 {
   #clock-cells = <0>;
   compatible = "st,stm32h7-pll-clock";
   reg = <2>;
   status = "disabled";
  };

  perck: perck {
   #clock-cells = <0>;
   compatible = "st,stm32-clock-mux";
   status = "disabled";
  };
 };

 mcos {
  mco1: mco1 {
   compatible = "st,stm32-clock-mco";
   status = "disabled";
  };

  mco2: mco2 {
   compatible = "st,stm32-clock-mco";
   status = "disabled";
  };
 };

 soc {
  flash: flash-controller@52002000 {
   compatible = "st,stm32-flash-controller", "st,stm32h7-flash-controller";
   reg = <0x52002000 0x400>;
   interrupts = <4 0>;

   #address-cells = <1>;
   #size-cells = <1>;
  };

  rcc: rcc@58024400 {
   compatible = "st,stm32h7-rcc";
   #clock-cells = <2>;
   reg = <0x58024400 0x400>;

   rctl: reset-controller {
    compatible = "st,stm32-rcc-rctl";
    #reset-cells = <1>;
   };
  };

  exti: interrupt-controller@58000000 {
   compatible = "st,stm32-exti";
   interrupt-controller;
   #interrupt-cells = <1>;
   #address-cells = <1>;
   reg = <0x58000000 0x400>;
   clocks = <&rcc (0x0F4) (1 << 1)>;
   num-lines = <96>;
   interrupts = <6 0>, <7 0>, <8 0>, <9 0>,
         <10 0>, <23 0>, <40 0>;
   interrupt-names = "line0", "line1", "line2", "line3",
       "line4", "line5-9", "line10-15";
   line-ranges = <0 1>, <1 1>, <2 1>, <3 1>,
          <4 1>, <5 5>, <10 6>;
  };

  pinctrl: pin-controller@58020000 {
   compatible = "st,stm32-pinctrl";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0x58020000 0x2400>;

   gpioa: gpio@58020000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58020000 0x400>;
    clocks = <&rcc (0x0E0) (1 << 0U)>;
   };

   gpiob: gpio@58020400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58020400 0x400>;
    clocks = <&rcc (0x0E0) (1 << 1U)>;
   };

   gpioc: gpio@58020800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58020800 0x400>;
    clocks = <&rcc (0x0E0) (1 << 2U)>;
   };

   gpiod: gpio@58020C00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58020C00 0x400>;
    clocks = <&rcc (0x0E0) (1 << 3U)>;
   };

   gpioe: gpio@58021000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58021000 0x400>;
    clocks = <&rcc (0x0E0) (1 << 4U)>;
   };

   gpiof: gpio@58021400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58021400 0x400>;
    clocks = <&rcc (0x0E0) (1 << 5U)>;
   };

   gpiog: gpio@58021800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58021800 0x400>;
    clocks = <&rcc (0x0E0) (1 << 6U)>;
   };

   gpioh: gpio@58021C00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58021C00 0x400>;
    clocks = <&rcc (0x0E0) (1 << 7U)>;
   };

   gpioi: gpio@58022000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58022000 0x400>;
    clocks = <&rcc (0x0E0) (1 << 8U)>;
   };

   gpioj: gpio@58022400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58022400 0x400>;
    clocks = <&rcc (0x0E0) (1 << 9U)>;
   };

   gpiok: gpio@58022800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x58022800 0x400>;
    clocks = <&rcc (0x0E0) (1 << 10U)>;
   };
  };

  iwdg: iwdg1: watchdog@58004800 {
   compatible = "st,stm32-watchdog";
   reg = <0x58004800 0x400>;
   status = "disabled";
  };

  wwdg: wwdg1: watchdog@50003000 {
   compatible = "st,stm32-window-watchdog";
   reg = <0x50003000 0x1000>;
   clocks = <&rcc (0x0E4) (1 << 6U)>;
   interrupts = <0 7>;
   status = "disabled";
  };

  usart1: serial@40011000 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40011000 0x400>;
   clocks = <&rcc (0x0F0) (1 << 4U)>;
   resets = <&rctl (((0x98) << 5U) | (4U))>;
   interrupts = <37 0>;
   status = "disabled";
  };
  usart2: serial@40004400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004400 0x400>;
   clocks = <&rcc (0x0E8) (1 << 17U)>;
   resets = <&rctl (((0x90) << 5U) | (17U))>;
   interrupts = <38 0>;
   status = "disabled";
  };
  usart3: serial@40004800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004800 0x400>;
   clocks = <&rcc (0x0E8) (1 << 18U)>;
   resets = <&rctl (((0x90) << 5U) | (18U))>;
   interrupts = <39 0>;
   status = "disabled";
  };
  uart4: serial@40004c00 {
   compatible ="st,stm32-uart";
   reg = <0x40004c00 0x400>;
   clocks = <&rcc (0x0E8) (1 << 19U)>;
   resets = <&rctl (((0x90) << 5U) | (19U))>;
   interrupts = <52 0>;
   status = "disabled";
  };
  uart5: serial@40005000 {
   compatible = "st,stm32-uart";
   reg = <0x40005000 0x400>;
   clocks = <&rcc (0x0E8) (1 << 20U)>;
   resets = <&rctl (((0x90) << 5U) | (20U))>;
   interrupts = <53 0>;
   status = "disabled";
  };
  usart6: serial@40011400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40011400 0x400>;
   clocks = <&rcc (0x0F0) (1 << 5U)>;
   resets = <&rctl (((0x98) << 5U) | (5U))>;
   interrupts = <71 0>;
   status = "disabled";
  };
  uart7: serial@40007800 {
   compatible = "st,stm32-uart";
   reg = <0x40007800 0x400>;
   clocks = <&rcc (0x0E8) (1 << 30U)>;
   resets = <&rctl (((0x90) << 5U) | (30U))>;
   interrupts = <82 0>;
   status = "disabled";
  };
  uart8: serial@40007c00 {
   compatible = "st,stm32-uart";
   reg = <0x40007c00 0x400>;
   clocks = <&rcc (0x0E8) (1 << 31U)>;
   resets = <&rctl (((0x90) << 5U) | (31U))>;
   interrupts = <83 0>;
   status = "disabled";
  };

  lpuart1: serial@58000c00 {
   compatible = "st,stm32-lpuart", "st,stm32-uart";
   reg = <0x58000c00 0x400>;
   clocks = <&rcc (0x0F4) (1 << 3U)>;
   resets = <&rctl (((0x9C) << 5U) | (3U))>;
   interrupts = <142 0>;
   status = "disabled";
  };

  rtc: rtc@58004000 {
   compatible = "st,stm32-rtc";
   reg = <0x58004000 0x400>;
   interrupts = <41 0>;
   clocks = <&rcc (0x0F4) (1 << 16U)>;
   prescaler = <32768>;
   alarms-count = <2>;
   alrm-exti-line = <17>;
   status = "disabled";
  };

  i2c1: i2c@40005400 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005400 0x400>;
   clocks = <&rcc (0x0E8) (1 << 21U)>;
   interrupts = <31 0>, <32 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c2: i2c@40005800 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005800 0x400>;
   clocks = <&rcc (0x0E8) (1 << 22U)>;
   interrupts = <33 0>, <34 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c3: i2c@40005c00 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005c00 0x400>;
   clocks = <&rcc (0x0E8) (1 << 23U)>;
   interrupts = <72 0>, <73 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c4: i2c@58001c00 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x58001c00 0x400>;
   clocks = <&rcc (0x0F4) (1 << 7U)>;
   interrupts = <95 0>, <96 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  spi1: spi@40013000 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   clocks = <&rcc (0x0F0) (1 << 12U)>,
    <&rcc ((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) ((((0x50) & 0xFFFFU) << 0U) | (((12) & 0x3FU) << 16U) | (((7) & 0x1FU) << 22U) | ((((0)) & 0x1FU) << 27U))>;
   interrupts = <35 0>;
   status = "disabled";
  };

  spi2: spi@40003800 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc (0x0E8) (1 << 14U)>,
    <&rcc ((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) ((((0x50) & 0xFFFFU) << 0U) | (((12) & 0x3FU) << 16U) | (((7) & 0x1FU) << 22U) | ((((0)) & 0x1FU) << 27U))>;
   interrupts = <36 0>;
   status = "disabled";
  };

  spi3: spi@40003c00 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003c00 0x400>;
   clocks = <&rcc (0x0E8) (1 << 15U)>,
    <&rcc ((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) ((((0x50) & 0xFFFFU) << 0U) | (((12) & 0x3FU) << 16U) | (((7) & 0x1FU) << 22U) | ((((0)) & 0x1FU) << 27U))>;
   interrupts = <51 0>;
   status = "disabled";
  };

  spi4: spi@40013400 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013400 0x400>;
   clocks = <&rcc (0x0F0) (1 << 13U)>;
   interrupts = <84 0>;
   status = "disabled";
  };

  spi5: spi@40015000 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40015000 0x400>;
   clocks = <&rcc (0x0F0) (1 << 20U)>;
   interrupts = <85 0>;
   status = "disabled";
  };

  spi6: spi@58001400 {
   compatible = "st,stm32h7-spi", "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x58001400 0x400>;
   clocks = <&rcc (0x0F4) (1 << 5U)>;
   interrupts = <86 0>;
   status = "disabled";
  };

  i2s1: i2s@40013000 {
   compatible = "st,stm32h7-i2s", "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   clocks = <&rcc (0x0F0) (1 << 12U)>,
     <&rcc ((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) ((((0x50) & 0xFFFFU) << 0U) | (((12) & 0x3FU) << 16U) | (((7) & 0x1FU) << 22U) | ((((0)) & 0x1FU) << 27U))>;
   dmas = <&dmamux1 0 38 ((((1 & 0x3) << 6) | ((1 & 0x1) << 10)) | ((2 & 0x3) << 16))
    &dmamux1 1 37 ((((2 & 0x3) << 6) | ((1 & 0x1) << 10)) | ((2 & 0x3) << 16))>;
   dma-names = "tx", "rx";
   interrupts = <35 3>;
   status = "disabled";
  };

  i2s2: i2s@40003800 {
   compatible = "st,stm32h7-i2s", "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc (0x0E8) (1 << 14U)>,
     <&rcc ((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) ((((0x50) & 0xFFFFU) << 0U) | (((12) & 0x3FU) << 16U) | (((7) & 0x1FU) << 22U) | ((((0)) & 0x1FU) << 27U))>;
   dmas = <&dmamux1 0 40 ((((1 & 0x3) << 6) | ((1 & 0x1) << 10)) | ((2 & 0x3) << 16))
    &dmamux1 1 39 ((((2 & 0x3) << 6) | ((1 & 0x1) << 10)) | ((2 & 0x3) << 16))>;
   dma-names = "tx", "rx";
   interrupts = <36 0>;
   status = "disabled";
  };

  i2s3: i2s@40003c00 {
   compatible = "st,stm32h7-i2s", "st,stm32-i2s";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003c00 0x400>;
   clocks = <&rcc (0x0E8) (1 << 15U)>,
     <&rcc ((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) ((((0x50) & 0xFFFFU) << 0U) | (((12) & 0x3FU) << 16U) | (((7) & 0x1FU) << 22U) | ((((0)) & 0x1FU) << 27U))>;
   dmas = <&dmamux1 0 62 ((((1 & 0x3) << 6) | ((1 & 0x1) << 10)) | ((2 & 0x3) << 16))
    &dmamux1 1 61 ((((2 & 0x3) << 6) | ((1 & 0x1) << 10)) | ((2 & 0x3) << 16))>;
   dma-names = "tx", "rx";
   interrupts = <51 0>;
   status = "disabled";
  };

  fdcan1: can@4000a000 {
   compatible = "st,stm32h7-fdcan";
   reg = <0x4000a000 0x400>, <0x4000ac00 0x350>;
   reg-names = "m_can", "message_ram";
   clocks = <&rcc (0x0EC) (1 << 8U)>;
   interrupts = <19 0>, <21 0>, <63 0>;
   interrupt-names = "int0", "int1", "calib";
   bosch,mram-cfg = <0x0 28 8 3 3 0 3 3>;
   status = "disabled";
  };

  fdcan2: can@4000a400 {
   compatible = "st,stm32h7-fdcan";
   reg = <0x4000a400 0x400>, <0x4000ac00 0x6a0>;
   reg-names = "m_can", "message_ram";
   clocks = <&rcc (0x0EC) (1 << 8U)>;
   interrupts = <20 0>, <22 0>, <63 0>;
   interrupt-names = "int0", "int1", "calib";
   bosch,mram-cfg = <0x350 28 8 3 3 0 3 3>;
   status = "disabled";
  };

  timers1: timers@40010000 {
   compatible = "st,stm32-timers";
   reg = <0x40010000 0x400>;
   clocks = <&rcc (0x0F0) (1 << 0)>,
     <&rcc ((((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x98) << 5U) | (0U))>;
   interrupts = <24 0>, <25 0>, <26 0>, <27 0>;
   interrupt-names = "brk", "up", "trgcom", "cc";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers2: timers@40000000 {
   compatible = "st,stm32-timers";
   reg = <0x40000000 0x400>;
   clocks = <&rcc (0x0E8) (1 << 0)>,
     <&rcc (((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x90) << 5U) | (0U))>;
   interrupts = <28 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers3: timers@40000400 {
   compatible = "st,stm32-timers";
   reg = <0x40000400 0x400>;
   clocks = <&rcc (0x0E8) (1 << 1)>,
     <&rcc (((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x90) << 5U) | (1U))>;
   interrupts = <29 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers4: timers@40000800 {
   compatible = "st,stm32-timers";
   reg = <0x40000800 0x400>;
   clocks = <&rcc (0x0E8) (1 << 2)>,
     <&rcc (((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x90) << 5U) | (2U))>;
   interrupts = <30 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers5: timers@40000c00 {
   compatible = "st,stm32-timers";
   reg = <0x40000c00 0x400>;
   clocks = <&rcc (0x0E8) (1 << 3)>,
     <&rcc (((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x90) << 5U) | (3U))>;
   interrupts = <50 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers6: timers@40001000 {
   compatible = "st,stm32-timers";
   reg = <0x40001000 0x400>;
   clocks = <&rcc (0x0E8) (1 << 4)>,
     <&rcc (((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x90) << 5U) | (4U))>;
   interrupts = <54 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers7: timers@40001400 {
   compatible = "st,stm32-timers";
   reg = <0x40001400 0x400>;
   clocks = <&rcc (0x0E8) (1 << 5)>,
     <&rcc (((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x90) << 5U) | (5U))>;
   interrupts = <55 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers8: timers@40010400 {
   compatible = "st,stm32-timers";
   reg = <0x40010400 0x400>;
   clocks = <&rcc (0x0F0) (1 << 1)>,
     <&rcc ((((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x98) << 5U) | (1U))>;
   interrupts = <43 0>, <44 0>, <45 0>, <46 0>;
   interrupt-names = "brk", "up", "trgcom", "cc";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers12: timers@40001800 {
   compatible = "st,stm32-timers";
   reg = <0x40001800 0x400>;
   clocks = <&rcc (0x0E8) (1 << 6)>,
     <&rcc (((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x90) << 5U) | (6U))>;
   interrupts = <43 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers13: timers@40001c00 {
   compatible = "st,stm32-timers";
   reg = <0x40001c00 0x400>;
   clocks = <&rcc (0x0E8) (1 << 7)>,
     <&rcc (((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x90) << 5U) | (7U))>;
   interrupts = <44 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers14: timers@40002000 {
   compatible = "st,stm32-timers";
   reg = <0x40002000 0x400>;
   clocks = <&rcc (0x0E8) (1 << 8)>,
     <&rcc (((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x90) << 5U) | (8U))>;
   interrupts = <45 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers15: timers@40014000 {
   compatible = "st,stm32-timers";
   reg = <0x40014000 0x400>;
   clocks = <&rcc (0x0F0) (1 << 16)>,
     <&rcc ((((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x98) << 5U) | (16U))>;
   interrupts = <116 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers16: timers@40014400 {
   compatible = "st,stm32-timers";
   reg = <0x40014400 0x400>;
   clocks = <&rcc (0x0F0) (1 << 17)>,
     <&rcc ((((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x98) << 5U) | (17U))>;
   interrupts = <117 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers17: timers@40014800 {
   compatible = "st,stm32-timers";
   reg = <0x40014800 0x400>;
   clocks = <&rcc (0x0F0) (1 << 18)>,
     <&rcc ((((((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x98) << 5U) | (18U))>;
   interrupts = <118 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  lptim1: timers@40002400 {
   compatible = "st,stm32-lptim";
   clocks = <&rcc (0x0E8) (1 << 9U)>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40002400 0x400>;
   interrupts = <93 1>;
   interrupt-names = "wakeup";
   status = "disabled";
  };
# 868 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7.dtsi" 3 4
  adc1: adc@40022000 {
   compatible = "st,stm32-adc";
   reg = <0x40022000 0x400>;
   clocks = <&rcc (0x0D8) (1 << 5U)>;
   interrupts = <18 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((16) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x05) & ((1UL << (3)) - 1UL)) << 16U) | (((14) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x06) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x03) & ((1UL << (3)) - 1UL)) << 16U) | (((10) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x07) & ((1UL << (3)) - 1UL)) << 16U) | (((8) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <2 3 9 17 33 65 388 811>;
   st,adc-sequencer = "FULLY_CONFIGURABLE";
   st,adc-oversampler = "OVERSAMPLER_EXTENDED";
  };

  adc2: adc@40022100 {
   compatible = "st,stm32-adc";
   reg = <0x40022100 0x400>;
   clocks = <&rcc (0x0D8) (1 << 5U)>;
   interrupts = <18 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((16) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x05) & ((1UL << (3)) - 1UL)) << 16U) | (((14) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x06) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x03) & ((1UL << (3)) - 1UL)) << 16U) | (((10) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x07) & ((1UL << (3)) - 1UL)) << 16U) | (((8) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <2 3 9 17 33 65 388 811>;
   st,adc-sequencer = "FULLY_CONFIGURABLE";
   st,adc-oversampler = "OVERSAMPLER_EXTENDED";
  };


  adc1_2: adc@40022300 {
   compatible = "st,stm32-adc";
   reg = <0x40022300 0x400>;
   clocks = <&rcc (0x0D8) (1 << 5U)>;
   interrupts = <18 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((16) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x05) & ((1UL << (3)) - 1UL)) << 16U) | (((14) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x06) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x03) & ((1UL << (3)) - 1UL)) << 16U) | (((10) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x07) & ((1UL << (3)) - 1UL)) << 16U) | (((8) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <2 3 9 17 33 65 388 811>;
   st,adc-sequencer = "FULLY_CONFIGURABLE";
   st,adc-oversampler = "OVERSAMPLER_EXTENDED";
  };

  adc3: adc@58026000 {
   compatible = "st,stm32-adc";
   reg = <0x58026000 0x400>;
   clocks = <&rcc (0x0E0) (1 << 24U)>;
   interrupts = <127 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((16) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x05) & ((1UL << (3)) - 1UL)) << 16U) | (((14) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x06) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x03) & ((1UL << (3)) - 1UL)) << 16U) | (((10) & ((1UL << (13)) - 1UL)) << 19U))
           ((((0x0C) & ((1UL << (8)) - 1UL)) << 0U) | (((2) & ((1UL << (5)) - 1UL)) << 8U) | (((((1UL << (3)) - 1UL)) & ((1UL << (3)) - 1UL)) << 13U) | (((0x07) & ((1UL << (3)) - 1UL)) << 16U) | (((8) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <2 3 9 17 33 65 388 811>;
   st,adc-sequencer = "FULLY_CONFIGURABLE";
   st,adc-oversampler = "OVERSAMPLER_EXTENDED";
  };

  dac1: dac@40007400 {
   compatible = "st,stm32-dac";
   reg = <0x40007400 0x400>;
   clocks = <&rcc (0x0E8) (1 << 29U)>;
   status = "disabled";
   #io-channel-cells = <1>;
  };

  dma1: dma@40020000 {
   compatible = "st,stm32-dma-v1";
   #dma-cells = <4>;
   reg = <0x40020000 0x400>;
   interrupts = <11 0>, <12 0>, <13 0>, <14 0>, <15 0>, <16 0>,
       <17 0>, <47 0>;
   clocks = <&rcc (0x0D8) (1 << 0U)>;
   st,mem2mem;
   dma-offset = <0>;
   dma-requests = <8>;
   status = "disabled";
  };

  dma2: dma@40020400 {
   compatible = "st,stm32-dma-v1";
   #dma-cells = <4>;
   reg = <0x40020400 0x400>;
   interrupts = <56 0>, <57 0>, <58 0>, <59 0>, <60 0>, <68 0>,
      <69 0>, <70 0>;
   clocks = <&rcc (0x0D8) (1 << 1U)>;
   st,mem2mem;
   dma-offset = <8>;
   dma-requests = <8>;
   status = "disabled";
  };

  bdma1: bdma@58025400 {
   compatible = "st,stm32-bdma";
   #dma-cells = <4>;
   reg = <0x58025400 0x400>;
   interrupts = <129 0>, <130 0>, <131 0>, <132 0>, <133 0>, <134 0>,
       <135 0>, <136 0>;
   clocks = <&rcc (0x0E0) (1 << 21U)>;
   st,mem2mem;
   dma-offset = <0>;
   dma-requests = <8>;
   status = "disabled";
  };

  dmamux1: dmamux@40020800 {
   compatible = "st,stm32-dmamux";
   #dma-cells = <3>;
   reg = <0x40020800 0x400>;
   interrupts = <102 0>;

   clocks = <&rcc (0x0D8) (1 << 0U)>;
   dma-channels = <16>;
   dma-generators = <8>;
   status = "disabled";




  };

  dmamux2: dmamux@58025800 {
   compatible = "st,stm32-dmamux";
   #dma-cells = <3>;
   reg = <0x58025800 0x400>;
   interrupts = <128 0>;

   clocks = <&rcc (0x0E0) (1 << 21U)>;
   dma-channels = <8>;
   dma-generators = <8>;
   status = "disabled";




  };

  rng: rng@48021800 {
   compatible = "st,stm32-rng";
   reg = <0x48021800 0x400>;
   clocks = <&rcc (0x0DC) (1 << 6U)>;
   interrupts = <80 0>;
   status = "disabled";
  };

  sdmmc1: sdmmc@52007000 {
   compatible = "st,stm32-sdmmc";
   reg = <0x52007000 0x400>;
   clocks = <&rcc (0x0D4) (1 << 16U)>,
     <&rcc ((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) ((((0x4C) & 0xFFFFU) << 0U) | (((16) & 0x3FU) << 16U) | (((1) & 0x1FU) << 22U) | ((((0)) & 0x1FU) << 27U))>;
   resets = <&rctl (((0x7C) << 5U) | (16U))>;
   interrupts = <49 0>;
   status = "disabled";
  };

  sdmmc2: sdmmc@48022400 {
   compatible = "st,stm32-sdmmc";
   reg = <0x48022400 0x400>;
   clocks = <&rcc (0x0DC) (1 << 9U)>,
     <&rcc ((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) ((((0x4C) & 0xFFFFU) << 0U) | (((16) & 0x3FU) << 16U) | (((1) & 0x1FU) << 22U) | ((((0)) & 0x1FU) << 27U))>;
   resets = <&rctl (((0x84) << 5U) | (9U))>;
   interrupts = <124 0>;
   status = "disabled";
  };

  ethernet@40028000 {
   reg = <0x40028000 0x8000>;
   compatible = "st,stm32-ethernet-controller";
   clock-names = "stm-eth";
   clocks = <&rcc (0x0D8) (1 << 15)>;

   mac: ethernet {
    compatible = "st,stm32h7-ethernet", "st,stm32-ethernet";
    interrupts = <61 0>;
    clock-names = "mac-clk-tx", "mac-clk-rx";
    clocks = <&rcc (0x0D8) (1 << 16)>,
      <&rcc (0x0D8) (1 << 17)>;
    status = "disabled";
   };

   mdio: mdio {
    compatible = "st,stm32-mdio";
    #address-cells = <1>;
    #size-cells = <0>;
    status = "disabled";
   };
  };

  fmc: memory-controller@52004000 {
   compatible = "st,stm32h7-fmc";
   reg = <0x52004000 0x400>;
   clocks = <&rcc (0x0D4) (1 << 12U)>;
   status = "disabled";

   sdram: sdram {
    compatible = "st,stm32-fmc-sdram";
    #address-cells = <1>;
    #size-cells = <0>;
    status = "disabled";
   };
  };

  backup_sram: memory@38800000 {
   compatible = "zephyr,memory-region", "st,stm32-backup-sram";
   reg = <0x38800000 ((4) * 1024)>;
   clocks = <&rcc (0x0E0) (1 << 28U)>;
   zephyr,memory-region = "BACKUP_SRAM";
   status = "disabled";
  };

  quadspi: spi@52005000 {
   compatible = "st,stm32-qspi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x52005000 0x1000>, <0x90000000 (((256) * 1024) * 1024)>;
   interrupts = <92 0>;
   clocks = <&rcc (0x0D4) (1 << 14U)>;
   status = "disabled";
  };

  dcmi: dcmi@48020000 {
   compatible = "st,stm32-dcmi";
   reg = <0x48020000 0x400>;
   interrupts = <78 0>;
   interrupt-names = "dcmi";
   clocks = <&rcc (0x0DC) (1 << 0U)>;
   dmas = <&dma1 0 75 (((2 & 0x3) << 6) | ((0 & 0x1) << 9) |
    ((1 & 0x1) << 10) | ((0 & 0x3) << 11) | ((2 & 0x3) << 13) |
    ((2 & 0x3) << 16)) 0U>;
   status = "disabled";
  };

  sai1_a: sai1@40015804 {
   compatible = "st,stm32-sai";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40015804 0x20>;
   clocks = <&rcc (0x0F0) (1 << 22)>,
     <&rcc ((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0x50) & 0xFFFFU) << 0U) | (((0) & 0x3FU) << 16U) | (((7) & 0x1FU) << 22U) | ((((1)) & 0x1FU) << 27U))>;
   dmas = <&dma1 1 87 (((0 & 0x1) << 5) | ((2 & 0x3) << 16) |
    (((1 & 0x3) << 11) | ((1 & 0x3) << 13))) 0>;
   status = "disabled";
  };

  sai1_b: sai1@40015824 {
   compatible = "st,stm32-sai";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40015824 0x20>;
   clocks = <&rcc (0x0F0) (1 << 22)>,
     <&rcc ((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0x50) & 0xFFFFU) << 0U) | (((0) & 0x3FU) << 16U) | (((7) & 0x1FU) << 22U) | ((((1)) & 0x1FU) << 27U))>;
   dmas = <&dma1 0 88 (((0 & 0x1) << 5) | ((2 & 0x3) << 16) |
    (((1 & 0x3) << 11) | ((1 & 0x3) << 13))) 0>;
   status = "disabled";
  };
 };

 die_temp: dietemp {
  compatible = "st,stm32-temp-cal";
  ts-cal1-addr = <0x1FF1E820>;
  ts-cal2-addr = <0x1FF1E840>;
  ts-cal1-temp = <30>;
  ts-cal2-temp = <110>;
  ts-cal-vrefanalog = <3300>;
  ts-cal-resolution = <16>;
  io-channels = <&adc3 18>;
  status = "disabled";
 };

 vbat: vbat {
  compatible = "st,stm32-vbat";
  ratio = <4>;
  status = "disabled";
 };

 vref: vref {
  compatible = "st,stm32-vref";
  vrefint-cal-addr = <0x1FF1E860>;
  vrefint-cal-mv = <3300>;
  vrefint-cal-resolution = <16>;
  status = "disabled";
 };

 smbus1: smbus1 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c1>;
  status = "disabled";
 };

 smbus2: smbus2 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c2>;
  status = "disabled";
 };

 smbus3: smbus3 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c3>;
  status = "disabled";
 };

 smbus4: smbus4 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c4>;
  status = "disabled";
 };
};

&nvic {
 arm,num-irq-priority-bits = <4>;
};
# 8 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h7_dualcore.dtsi" 2 3 4

/ {
 cpus {
  cpu1: cpu@1 {
   device_type = "cpu";
   compatible = "arm,cortex-m4f";
   reg = <1>;
  };
 };

 soc {
  mailbox: mailbox@58026400 {
   compatible = "st,stm32-hsem-mailbox", "st,mbox-stm32-hsem";
   reg = <0x58026400 0x400>;
   clocks = <&rcc (0x0E0) (1 << 25U)>;
   #mbox-cells = <1>;
   status = "disabled";
  };
 };
};

&flash {
 clocks = <&rcc (0x0D4) (1 << 8U)>;
};
# 8 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h745.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/display/panel.h" 1 3 4
# 9 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h745.dtsi" 2 3 4

/ {
 soc {
  compatible = "st,stm32h745", "st,stm32h7", "simple-bus";

  flash-controller@52002000 {
   flash0: flash@8000000 {
    compatible = "st,stm32-nv-flash", "soc-nv-flash";
    write-block-size = <32>;
    erase-block-size = <((128) * 1024)>;

    max-erase-time = <4000>;
   };
   flash1: flash@8100000 {
    compatible = "st,stm32-nv-flash", "soc-nv-flash";
    write-block-size = <32>;
    erase-block-size = <((128) * 1024)>;

    max-erase-time = <4000>;
   };
  };

  dmamux1: dmamux@40020800 {
   dma-requests= <107>;
  };

  dmamux2: dmamux@58025800 {
   dma-requests= <107>;
  };

  ltdc: display-controller@50001000 {
   compatible = "st,stm32-ltdc";
   reg = <0x50001000 0x200>;
   interrupts = <88 0>, <89 0>;
   interrupt-names = "ltdc", "ltdc_er";
   clocks = <&rcc (0x0E4) (1 << 3U)>;
   resets = <&rctl (((0x8C) << 5U) | (3U))>;
   status = "disabled";
  };

  usbotg_hs: usb@40040000 {
   compatible = "st,stm32-otghs";
   reg = <0x40040000 0x40000>;
   interrupts = <74 0>, <75 0>, <76 0>, <77 0>;
   interrupt-names = "ep1_out", "ep1_in", "wkup", "otghs";
   num-bidir-endpoints = <9>;
   ram-size = <4096>;
   maximum-speed = "full-speed";
   clocks = <&rcc (0x0D8) (1 << 25U)>,
     <&rcc ((0x003 + 1) + 1) ((((0x54) & 0xFFFFU) << 0U) | (((20) & 0x3FU) << 16U) | (((3) & 0x1FU) << 22U) | ((((3)) & 0x1FU) << 27U))>;
   phys = <&otghs_fs_phy>;
   status = "disabled";
  };

  usbotg_fs: usb@40080000 {
   compatible = "st,stm32-otgfs";
   reg = <0x40080000 0x40000>;
   interrupts = <98 0>, <99 0>, <100 0>, <101 0>;
   interrupt-names = "ep1_out", "ep1_in", "wkup", "otgfs";
   num-bidir-endpoints = <9>;
   ram-size = <4096>;
   maximum-speed = "full-speed";
   clocks = <&rcc (0x0D8) (1 << 27U)>,
     <&rcc ((0x003 + 1) + 1) ((((0x54) & 0xFFFFU) << 0U) | (((20) & 0x3FU) << 16U) | (((3) & 0x1FU) << 22U) | ((((3)) & 0x1FU) << 27U))>;
   phys = <&otghs_fs_phy>;
   status = "disabled";
  };

  rtc@58004000 {
   bbram: backup_regs {
    compatible = "st,stm32-bbram";
    st,backup-regs = <32>;
    status = "disabled";
   };
  };
 };







 sram0: memory@24000000 {
  reg = <0x24000000 ((512) * 1024)>;
  compatible = "mmio-sram";
 };


 sram1: memory@30000000 {
  reg = <0x30000000 ((128) * 1024)>;
  compatible = "zephyr,memory-region", "mmio-sram";
  zephyr,memory-region = "SRAM1";
 };


 sram2: memory@30020000 {
  compatible = "zephyr,memory-region", "mmio-sram";
  reg = <0x30020000 ((128) * 1024)>;
  zephyr,memory-region = "SRAM2";
 };


 sram3: memory@30040000 {
  compatible = "zephyr,memory-region", "mmio-sram";
  reg = <0x30040000 ((32) * 1024)>;
  zephyr,memory-region = "SRAM3";
 };


 sram4: memory@38000000 {
  reg = <0x38000000 ((64) * 1024)>;
  compatible = "zephyr,memory-region", "mmio-sram";
  zephyr,memory-region = "SRAM4";
 };

 otghs_fs_phy: otghs_fs_phy {
  compatible = "usb-nop-xceiv";
  #phy-cells = <0>;
 };

 vref: vref {
  io-channels = <&adc3 19>;
 };

 vbat: vbat {
  io-channels = <&adc3 17>;
 };
};
# 8 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h747.dtsi" 2 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/mipi_dsi/mipi_dsi.h" 1 3 4
# 9 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h747.dtsi" 2 3 4

/ {
 soc {
  compatible = "st,stm32h747", "st,stm32h7", "simple-bus";

  mipi_dsi: dsihost@50000000 {
   compatible = "st,stm32-mipi-dsi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x50000000 0x1000>;
   clock-names = "dsiclk", "refclk", "pixelclk";
   clocks = <&rcc (0x0E4) (1 << 4U)>,
     <&rcc (0x003 + 1) 0xFF>,
     <&rcc (((((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x8C) << 5U) | (4U))>;
   status = "disabled";
  };
 };
};
# 9 "C:/Work/zephyrproject/zephyr/dts/arm/st/h7/stm32h747Xi_m7.dtsi" 2 3 4

/delete-node/ &flash1;

/ {
 cpus {
  /delete-node/ cpu@1;
 };

 soc {
  flash-controller@52002000 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((1024) * 1024)>;
   };
  };

  mailbox@58026400 {
   interrupts = <125 0>;
  };
 };
};
# 9 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/stm32h747i_disco_stm32h747xx_m7.dts" 2
# 1 "C:/Work/zephyrproject/modules/hal/stm32/dts/st/h7/stm32h747xihx-pinctrl.dtsi" 1 3 4






# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 1 3 4
# 10 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 3 4
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl-common.h" 1 3 4
# 11 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 2 3 4
# 8 "C:/Work/zephyrproject/modules/hal/stm32/dts/st/h7/stm32h747xihx-pinctrl.dtsi" 2 3 4

/ {
 soc {
  pinctrl: pin-controller@58020000 {



   /omit-if-no-ref/ adc1_inp16_pa0: adc1_inp16_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn1_pa0_c: adc1_inn1_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp0_pa0_c: adc1_inp0_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn16_pa1: adc1_inn16_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp17_pa1: adc1_inp17_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp1_pa1_c: adc1_inp1_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp14_pa2: adc1_inp14_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp15_pa3: adc1_inp15_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp18_pa4: adc1_inp18_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn18_pa5: adc1_inn18_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp19_pa5: adc1_inp19_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp3_pa6: adc1_inp3_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn3_pa7: adc1_inn3_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp7_pa7: adc1_inp7_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn5_pb0: adc1_inn5_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp9_pb0: adc1_inp9_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp5_pb1: adc1_inp5_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp10_pc0: adc1_inp10_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn10_pc1: adc1_inn10_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp11_pc1: adc1_inp11_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn11_pc2: adc1_inn11_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp12_pc2: adc1_inp12_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn12_pc3: adc1_inn12_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp13_pc3: adc1_inp13_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp4_pc4: adc1_inp4_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn4_pc5: adc1_inn4_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp8_pc5: adc1_inp8_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp2_pf11: adc1_inp2_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inn2_pf12: adc1_inn2_pf12 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc1_inp6_pf12: adc1_inp6_pf12 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn1_pa0_c: adc2_inn1_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp0_pa0_c: adc2_inp0_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp1_pa1_c: adc2_inp1_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp14_pa2: adc2_inp14_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp15_pa3: adc2_inp15_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp18_pa4: adc2_inp18_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn18_pa5: adc2_inn18_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp19_pa5: adc2_inp19_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp3_pa6: adc2_inp3_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn3_pa7: adc2_inn3_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp7_pa7: adc2_inp7_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn5_pb0: adc2_inn5_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp9_pb0: adc2_inp9_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp5_pb1: adc2_inp5_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp10_pc0: adc2_inp10_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn10_pc1: adc2_inn10_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp11_pc1: adc2_inp11_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn11_pc2: adc2_inn11_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp12_pc2: adc2_inp12_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn12_pc3: adc2_inn12_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp13_pc3: adc2_inp13_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp4_pc4: adc2_inp4_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn4_pc5: adc2_inn4_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp8_pc5: adc2_inp8_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp2_pf13: adc2_inp2_pf13 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inn2_pf14: adc2_inn2_pf14 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc2_inp6_pf14: adc2_inp6_pf14 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp10_pc0: adc3_inp10_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inn10_pc1: adc3_inn10_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp11_pc1: adc3_inp11_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inn11_pc2: adc3_inn11_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp12_pc2: adc3_inp12_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inn1_pc2_c: adc3_inn1_pc2_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp0_pc2_c: adc3_inp0_pc2_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp1_pc3_c: adc3_inp1_pc3_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp5_pf3: adc3_inp5_pf3 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inn5_pf4: adc3_inn5_pf4 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp9_pf4: adc3_inp9_pf4 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp4_pf5: adc3_inp4_pf5 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inn4_pf6: adc3_inn4_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp8_pf6: adc3_inp8_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp3_pf7: adc3_inp3_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inn3_pf8: adc3_inn3_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp7_pf8: adc3_inp7_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp2_pf9: adc3_inp2_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inn2_pf10: adc3_inn2_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp6_pf10: adc3_inp6_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp13_ph2: adc3_inp13_ph2 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inn13_ph3: adc3_inn13_ph3 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp14_ph3: adc3_inp14_ph3 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inn14_ph4: adc3_inn14_ph4 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp15_ph4: adc3_inp15_ph4 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inn15_ph5: adc3_inn15_ph5 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc3_inp16_ph5: adc3_inp16_ph5 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ analog_pa0: analog_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa0_c: analog_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa1: analog_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa1_c: analog_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa2: analog_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa3: analog_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa4: analog_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa5: analog_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa6: analog_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa7: analog_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa8: analog_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa9: analog_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa10: analog_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa11: analog_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa12: analog_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa13: analog_pa13 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa14: analog_pa14 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa15: analog_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb0: analog_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb1: analog_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb2: analog_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb3: analog_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb4: analog_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb5: analog_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb6: analog_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb7: analog_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb8: analog_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb9: analog_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb10: analog_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb11: analog_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb12: analog_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb13: analog_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb14: analog_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb15: analog_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc0: analog_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc1: analog_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc2: analog_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc2_c: analog_pc2_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc3: analog_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc3_c: analog_pc3_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc4: analog_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc5: analog_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc6: analog_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc7: analog_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc8: analog_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc9: analog_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc10: analog_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc11: analog_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc12: analog_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc13: analog_pc13 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc14: analog_pc14 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pc15: analog_pc15 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd0: analog_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd1: analog_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd2: analog_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd3: analog_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd4: analog_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd5: analog_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd6: analog_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd7: analog_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd8: analog_pd8 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd9: analog_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd10: analog_pd10 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd11: analog_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd12: analog_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd13: analog_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd14: analog_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pd15: analog_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe0: analog_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe1: analog_pe1 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe2: analog_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe3: analog_pe3 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe4: analog_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe5: analog_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe6: analog_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe7: analog_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe8: analog_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe9: analog_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe10: analog_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe11: analog_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe12: analog_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe13: analog_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe14: analog_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pe15: analog_pe15 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf0: analog_pf0 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf1: analog_pf1 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf2: analog_pf2 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf3: analog_pf3 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf4: analog_pf4 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf5: analog_pf5 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf6: analog_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf7: analog_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf8: analog_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf9: analog_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf10: analog_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf11: analog_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf12: analog_pf12 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf13: analog_pf13 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf14: analog_pf14 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf15: analog_pf15 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg0: analog_pg0 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg1: analog_pg1 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg2: analog_pg2 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg3: analog_pg3 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg4: analog_pg4 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg5: analog_pg5 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg6: analog_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg7: analog_pg7 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg8: analog_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg9: analog_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg10: analog_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg11: analog_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg12: analog_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg13: analog_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg14: analog_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pg15: analog_pg15 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph0: analog_ph0 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph1: analog_ph1 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph2: analog_ph2 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph3: analog_ph3 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph4: analog_ph4 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph5: analog_ph5 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph6: analog_ph6 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph7: analog_ph7 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph8: analog_ph8 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph9: analog_ph9 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph10: analog_ph10 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph11: analog_ph11 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph12: analog_ph12 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph13: analog_ph13 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph14: analog_ph14 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_ph15: analog_ph15 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi0: analog_pi0 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi1: analog_pi1 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi2: analog_pi2 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi3: analog_pi3 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi4: analog_pi4 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi5: analog_pi5 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi6: analog_pi6 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi7: analog_pi7 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi8: analog_pi8 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi9: analog_pi9 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi10: analog_pi10 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi11: analog_pi11 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi12: analog_pi12 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi13: analog_pi13 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi14: analog_pi14 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pi15: analog_pi15 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj0: analog_pj0 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj1: analog_pj1 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj2: analog_pj2 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj3: analog_pj3 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj4: analog_pj4 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj5: analog_pj5 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj6: analog_pj6 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj7: analog_pj7 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj8: analog_pj8 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj9: analog_pj9 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj10: analog_pj10 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj11: analog_pj11 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj12: analog_pj12 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj13: analog_pj13 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj14: analog_pj14 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pj15: analog_pj15 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pk0: analog_pk0 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pk1: analog_pk1 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pk2: analog_pk2 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pk3: analog_pk3 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pk4: analog_pk4 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pk5: analog_pk5 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pk6: analog_pk6 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pk7: analog_pk7 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ dac1_out1_pa4: dac1_out1_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ dac1_out2_pa5: dac1_out2_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ dcmi_hsync_pa4: dcmi_hsync_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_pixclk_pa6: dcmi_pixclk_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d0_pa9: dcmi_d0_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d1_pa10: dcmi_d1_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d10_pb5: dcmi_d10_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d5_pb6: dcmi_d5_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_vsync_pb7: dcmi_vsync_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d6_pb8: dcmi_d6_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d7_pb9: dcmi_d7_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d0_pc6: dcmi_d0_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d1_pc7: dcmi_d1_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d2_pc8: dcmi_d2_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d3_pc9: dcmi_d3_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d8_pc10: dcmi_d8_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d4_pc11: dcmi_d4_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d9_pc12: dcmi_d9_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d11_pd2: dcmi_d11_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d5_pd3: dcmi_d5_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d10_pd6: dcmi_d10_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d2_pe0: dcmi_d2_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d3_pe1: dcmi_d3_pe1 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d4_pe4: dcmi_d4_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d6_pe5: dcmi_d6_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d7_pe6: dcmi_d7_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d11_pf10: dcmi_d11_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d12_pf11: dcmi_d12_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d12_pg6: dcmi_d12_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d13_pg7: dcmi_d13_pg7 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_vsync_pg9: dcmi_vsync_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d2_pg10: dcmi_d2_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d3_pg11: dcmi_d3_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d13_pg15: dcmi_d13_pg15 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d8_ph6: dcmi_d8_ph6 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d9_ph7: dcmi_d9_ph7 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_hsync_ph8: dcmi_hsync_ph8 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d0_ph9: dcmi_d0_ph9 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d1_ph10: dcmi_d1_ph10 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d2_ph11: dcmi_d2_ph11 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d3_ph12: dcmi_d3_ph12 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d4_ph14: dcmi_d4_ph14 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d11_ph15: dcmi_d11_ph15 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d13_pi0: dcmi_d13_pi0 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d8_pi1: dcmi_d8_pi1 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d9_pi2: dcmi_d9_pi2 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d10_pi3: dcmi_d10_pi3 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d5_pi4: dcmi_d5_pi4 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_vsync_pi5: dcmi_vsync_pi5 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d6_pi6: dcmi_d6_pi6 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dcmi_d7_pi7: dcmi_d7_pi7 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ dfsdm1_ckout_pb0: dfsdm1_ckout_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin1_pb1: dfsdm1_datin1_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin1_pb2: dfsdm1_ckin1_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin5_pb6: dfsdm1_datin5_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin5_pb7: dfsdm1_ckin5_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin7_pb8: dfsdm1_ckin7_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin7_pb9: dfsdm1_datin7_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin7_pb10: dfsdm1_datin7_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin7_pb11: dfsdm1_ckin7_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin1_pb12: dfsdm1_datin1_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin1_pb13: dfsdm1_ckin1_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin2_pb14: dfsdm1_datin2_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin2_pb15: dfsdm1_ckin2_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin0_pc0: dfsdm1_ckin0_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin4_pc0: dfsdm1_datin4_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin4_pc1: dfsdm1_ckin4_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin0_pc1: dfsdm1_datin0_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin1_pc2: dfsdm1_ckin1_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckout_pc2: dfsdm1_ckout_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin1_pc2_c: dfsdm1_ckin1_pc2_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckout_pc2_c: dfsdm1_ckout_pc2_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin1_pc3: dfsdm1_datin1_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin1_pc3_c: dfsdm1_datin1_pc3_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin2_pc4: dfsdm1_ckin2_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin2_pc5: dfsdm1_datin2_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin3_pc6: dfsdm1_ckin3_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin3_pc7: dfsdm1_datin3_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin5_pc10: dfsdm1_ckin5_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin5_pc11: dfsdm1_datin5_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin6_pd0: dfsdm1_ckin6_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin6_pd1: dfsdm1_datin6_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckout_pd3: dfsdm1_ckout_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin4_pd6: dfsdm1_ckin4_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin1_pd6: dfsdm1_datin1_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin1_pd7: dfsdm1_ckin1_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin4_pd7: dfsdm1_datin4_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin3_pd8: dfsdm1_ckin3_pd8 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin3_pd9: dfsdm1_datin3_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckout_pd10: dfsdm1_ckout_pd10 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin3_pe4: dfsdm1_datin3_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin3_pe5: dfsdm1_ckin3_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin2_pe7: dfsdm1_datin2_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin2_pe8: dfsdm1_ckin2_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckout_pe9: dfsdm1_ckout_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin4_pe10: dfsdm1_datin4_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin4_pe11: dfsdm1_ckin4_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin5_pe12: dfsdm1_datin5_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin5_pe13: dfsdm1_ckin5_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_datin6_pf13: dfsdm1_datin6_pf13 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ dfsdm1_ckin6_pf14: dfsdm1_ckin6_pf14 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ eth_crs_pa0: eth_crs_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_crs_pa0_c: eth_crs_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_ref_clk_pa1: eth_ref_clk_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rx_clk_pa1: eth_rx_clk_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_ref_clk_pa1_c: eth_ref_clk_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rx_clk_pa1_c: eth_rx_clk_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_mdio_pa2: eth_mdio_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_col_pa3: eth_col_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_crs_dv_pa7: eth_crs_dv_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rx_dv_pa7: eth_rx_dv_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rxd2_pb0: eth_rxd2_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rxd3_pb1: eth_rxd3_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_pps_out_pb5: eth_pps_out_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd3_pb8: eth_txd3_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rx_er_pb10: eth_rx_er_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_tx_en_pb11: eth_tx_en_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd0_pb12: eth_txd0_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd1_pb13: eth_txd1_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_mdc_pc1: eth_mdc_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd2_pc2: eth_txd2_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd2_pc2_c: eth_txd2_pc2_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_tx_clk_pc3: eth_tx_clk_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_tx_clk_pc3_c: eth_tx_clk_pc3_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rxd0_pc4: eth_rxd0_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rxd1_pc5: eth_rxd1_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd3_pe2: eth_txd3_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_pps_out_pg8: eth_pps_out_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_tx_en_pg11: eth_tx_en_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd1_pg12: eth_txd1_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd0_pg13: eth_txd0_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_txd1_pg14: eth_txd1_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_crs_ph2: eth_crs_ph2 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_col_ph3: eth_col_ph3 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rxd2_ph6: eth_rxd2_ph6 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rxd3_ph7: eth_rxd3_ph7 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ eth_rx_er_pi10: eth_rx_er_pi10 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ fdcan1_rx_pa11: fdcan1_rx_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_pb8: fdcan1_rx_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_pd0: fdcan1_rx_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_ph14: fdcan1_rx_ph14 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_rx_pi9: fdcan1_rx_pi9 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan2_rx_pb5: fdcan2_rx_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan2_rx_pb12: fdcan2_rx_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ fdcan1_tx_pa12: fdcan1_tx_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_pb9: fdcan1_tx_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_pd1: fdcan1_tx_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan1_tx_ph13: fdcan1_tx_ph13 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan2_tx_pb6: fdcan2_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ fdcan2_tx_pb13: fdcan2_tx_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ fmc_sdnwe_pa7: fmc_sdnwe_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdcke1_pb5: fmc_sdcke1_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdne1_pb6: fmc_sdne1_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nl_pb7: fmc_nl_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdnwe_pc0: fmc_sdnwe_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdne0_pc2: fmc_sdne0_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdne0_pc2_c: fmc_sdne0_pc2_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdcke0_pc3: fmc_sdcke0_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdcke0_pc3_c: fmc_sdcke0_pc3_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdne0_pc4: fmc_sdne0_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdcke0_pc5: fmc_sdcke0_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nwait_pc6: fmc_nwait_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne1_pc7: fmc_ne1_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nce_pc8: fmc_nce_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne2_pc8: fmc_ne2_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d2_pd0: fmc_d2_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d3_pd1: fmc_d3_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_clk_pd3: fmc_clk_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_noe_pd4: fmc_noe_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nwe_pd5: fmc_nwe_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nwait_pd6: fmc_nwait_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne1_pd7: fmc_ne1_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d13_pd8: fmc_d13_pd8 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d14_pd9: fmc_d14_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d15_pd10: fmc_d15_pd10 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a16_pd11: fmc_a16_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a17_pd12: fmc_a17_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a18_pd13: fmc_a18_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d0_pd14: fmc_d0_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d1_pd15: fmc_d1_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nbl0_pe0: fmc_nbl0_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nbl1_pe1: fmc_nbl1_pe1 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a23_pe2: fmc_a23_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a19_pe3: fmc_a19_pe3 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a20_pe4: fmc_a20_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a21_pe5: fmc_a21_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a22_pe6: fmc_a22_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d4_pe7: fmc_d4_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d5_pe8: fmc_d5_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d6_pe9: fmc_d6_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d7_pe10: fmc_d7_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d8_pe11: fmc_d8_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d9_pe12: fmc_d9_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d10_pe13: fmc_d10_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d11_pe14: fmc_d11_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d12_pe15: fmc_d12_pe15 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a0_pf0: fmc_a0_pf0 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a1_pf1: fmc_a1_pf1 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a2_pf2: fmc_a2_pf2 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a3_pf3: fmc_a3_pf3 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a4_pf4: fmc_a4_pf4 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a5_pf5: fmc_a5_pf5 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdnras_pf11: fmc_sdnras_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a6_pf12: fmc_a6_pf12 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a7_pf13: fmc_a7_pf13 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a8_pf14: fmc_a8_pf14 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a9_pf15: fmc_a9_pf15 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a10_pg0: fmc_a10_pg0 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a11_pg1: fmc_a11_pg1 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a12_pg2: fmc_a12_pg2 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a13_pg3: fmc_a13_pg3 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a14_pg4: fmc_a14_pg4 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a15_pg5: fmc_a15_pg5 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne3_pg6: fmc_ne3_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_int_pg7: fmc_int_pg7 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdclk_pg8: fmc_sdclk_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nce_pg9: fmc_nce_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne2_pg9: fmc_ne2_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne3_pg10: fmc_ne3_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_ne4_pg12: fmc_ne4_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a24_pg13: fmc_a24_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_a25_pg14: fmc_a25_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdncas_pg15: fmc_sdncas_pg15 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdcke0_ph2: fmc_sdcke0_ph2 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdne0_ph3: fmc_sdne0_ph3 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdnwe_ph5: fmc_sdnwe_ph5 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdne1_ph6: fmc_sdne1_ph6 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_sdcke1_ph7: fmc_sdcke1_ph7 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d16_ph8: fmc_d16_ph8 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d17_ph9: fmc_d17_ph9 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d18_ph10: fmc_d18_ph10 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d19_ph11: fmc_d19_ph11 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d20_ph12: fmc_d20_ph12 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d21_ph13: fmc_d21_ph13 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d22_ph14: fmc_d22_ph14 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d23_ph15: fmc_d23_ph15 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d24_pi0: fmc_d24_pi0 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d25_pi1: fmc_d25_pi1 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d26_pi2: fmc_d26_pi2 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d27_pi3: fmc_d27_pi3 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nbl2_pi4: fmc_nbl2_pi4 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_nbl3_pi5: fmc_nbl3_pi5 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d28_pi6: fmc_d28_pi6 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d29_pi7: fmc_d29_pi7 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d30_pi9: fmc_d30_pi9 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ fmc_d31_pi10: fmc_d31_pi10 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2c1_scl_pb6: i2c1_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_scl_pb8: i2c1_scl_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_pb10: i2c2_scl_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_pf1: i2c2_scl_pf1 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_ph4: i2c2_scl_ph4 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_scl_pa8: i2c3_scl_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_scl_ph7: i2c3_scl_ph7 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pb6: i2c4_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pb8: i2c4_scl_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pd12: i2c4_scl_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_pf14: i2c4_scl_pf14 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_scl_ph11: i2c4_scl_ph11 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_sda_pb7: i2c1_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_sda_pb9: i2c1_sda_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pb11: i2c2_sda_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pf0: i2c2_sda_pf0 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_ph5: i2c2_sda_ph5 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_pc9: i2c3_sda_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c3_sda_ph8: i2c3_sda_ph8 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pb7: i2c4_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pb9: i2c4_sda_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pd13: i2c4_sda_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_pf15: i2c4_sda_pf15 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c4_sda_ph12: i2c4_sda_ph12 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_smba_pb5: i2c1_smba_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c2_smba_pb12: i2c2_smba_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c2_smba_pf2: i2c2_smba_pf2 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c2_smba_ph6: i2c2_smba_ph6 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c3_smba_pa9: i2c3_smba_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c3_smba_ph9: i2c3_smba_ph9 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c4_smba_pb5: i2c4_smba_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c4_smba_pb9: i2c4_smba_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c4_smba_pd11: i2c4_smba_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c4_smba_pf13: i2c4_smba_pf13 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ i2c4_smba_ph10: i2c4_smba_ph10 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ i2s1_ck_pa5: i2s1_ck_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s1_ck_pb3: i2s1_ck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s1_ck_pg11: i2s1_ck_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pa9: i2s2_ck_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pa12: i2s2_ck_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pb10: i2s2_ck_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pb13: i2s2_ck_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pd3: i2s2_ck_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_ck_pi1: i2s2_ck_pi1 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_ck_pb3: i2s3_ck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_ck_pc10: i2s3_ck_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2s1_mck_pc4: i2s1_mck_pc4 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s2_mck_pc6: i2s2_mck_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s3_mck_pc7: i2s3_mck_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2s1_ws_pa4: i2s1_ws_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s1_ws_pa15: i2s1_ws_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s1_ws_pg10: i2s1_ws_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pa11: i2s2_ws_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pb4: i2s2_ws_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pb9: i2s2_ws_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pb12: i2s2_ws_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s2_ws_pi0: i2s2_ws_pi0 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_ws_pa4: i2s3_ws_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s3_ws_pa15: i2s3_ws_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ debug_jtms_swdio_pa13: debug_jtms_swdio_pa13 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ debug_jtck_swclk_pa14: debug_jtck_swclk_pa14 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ debug_jtdi_pa15: debug_jtdi_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ debug_jtdo_swo_pb3: debug_jtdo_swo_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ debug_jtrst_pb4: debug_jtrst_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ ltdc_r2_pa1: ltdc_r2_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r2_pa1_c: ltdc_r2_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r1_pa2: ltdc_r1_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b2_pa3: ltdc_b2_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b5_pa3: ltdc_b5_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_vsync_pa4: ltdc_vsync_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r4_pa5: ltdc_r4_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g2_pa6: ltdc_g2_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b3_pa8: ltdc_b3_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xd) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r6_pa8: ltdc_r6_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r5_pa9: ltdc_r5_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b1_pa10: ltdc_b1_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b4_pa10: ltdc_b4_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r4_pa11: ltdc_r4_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r5_pa12: ltdc_r5_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g1_pb0: ltdc_g1_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r3_pb0: ltdc_r3_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g0_pb1: ltdc_g0_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r6_pb1: ltdc_r6_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b6_pb8: ltdc_b6_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b7_pb9: ltdc_b7_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g4_pb10: ltdc_g4_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g5_pb11: ltdc_g5_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r5_pc0: ltdc_r5_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_hsync_pc6: ltdc_hsync_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g6_pc7: ltdc_g6_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b2_pc9: ltdc_b2_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g3_pc9: ltdc_g3_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r2_pc10: ltdc_r2_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g7_pd3: ltdc_g7_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b2_pd6: ltdc_b2_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b3_pd10: ltdc_b3_pd10 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b0_pe4: ltdc_b0_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g0_pe5: ltdc_g0_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g1_pe6: ltdc_g1_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g3_pe11: ltdc_g3_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b4_pe12: ltdc_b4_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_de_pe13: ltdc_de_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_clk_pe14: ltdc_clk_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r7_pe15: ltdc_r7_pe15 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_de_pf10: ltdc_de_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r7_pg6: ltdc_r7_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_clk_pg7: ltdc_clk_pg7 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g7_pg8: ltdc_g7_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b2_pg10: ltdc_b2_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g3_pg10: ltdc_g3_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b3_pg11: ltdc_b3_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b1_pg12: ltdc_b1_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b4_pg12: ltdc_b4_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r0_pg13: ltdc_r0_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b0_pg14: ltdc_b0_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r0_ph2: ltdc_r0_ph2 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r1_ph3: ltdc_r1_ph3 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g4_ph4: ltdc_g4_ph4 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g5_ph4: ltdc_g5_ph4 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r2_ph8: ltdc_r2_ph8 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r3_ph9: ltdc_r3_ph9 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r4_ph10: ltdc_r4_ph10 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r5_ph11: ltdc_r5_ph11 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r6_ph12: ltdc_r6_ph12 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g2_ph13: ltdc_g2_ph13 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g3_ph14: ltdc_g3_ph14 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g4_ph15: ltdc_g4_ph15 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g5_pi0: ltdc_g5_pi0 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g6_pi1: ltdc_g6_pi1 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g7_pi2: ltdc_g7_pi2 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b4_pi4: ltdc_b4_pi4 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b5_pi5: ltdc_b5_pi5 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b6_pi6: ltdc_b6_pi6 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b7_pi7: ltdc_b7_pi7 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_vsync_pi9: ltdc_vsync_pi9 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_hsync_pi10: ltdc_hsync_pi10 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g6_pi11: ltdc_g6_pi11 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_hsync_pi12: ltdc_hsync_pi12 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_vsync_pi13: ltdc_vsync_pi13 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_clk_pi14: ltdc_clk_pi14 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g2_pi15: ltdc_g2_pi15 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r0_pi15: ltdc_r0_pi15 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r1_pj0: ltdc_r1_pj0 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r7_pj0: ltdc_r7_pj0 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r2_pj1: ltdc_r2_pj1 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r3_pj2: ltdc_r3_pj2 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r4_pj3: ltdc_r4_pj3 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r5_pj4: ltdc_r5_pj4 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r6_pj5: ltdc_r6_pj5 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_r7_pj6: ltdc_r7_pj6 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g0_pj7: ltdc_g0_pj7 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g1_pj8: ltdc_g1_pj8 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g2_pj9: ltdc_g2_pj9 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g3_pj10: ltdc_g3_pj10 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g4_pj11: ltdc_g4_pj11 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b0_pj12: ltdc_b0_pj12 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g3_pj12: ltdc_g3_pj12 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b1_pj13: ltdc_b1_pj13 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b4_pj13: ltdc_b4_pj13 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b2_pj14: ltdc_b2_pj14 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b3_pj15: ltdc_b3_pj15 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g5_pk0: ltdc_g5_pk0 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g6_pk1: ltdc_g6_pk1 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_g7_pk2: ltdc_g7_pk2 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b4_pk3: ltdc_b4_pk3 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b5_pk4: ltdc_b5_pk4 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b6_pk5: ltdc_b6_pk5 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_b7_pk6: ltdc_b7_pk6 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ ltdc_de_pk7: ltdc_de_pk7 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ quadspi_bk1_io3_pa1: quadspi_bk1_io3_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io3_pa1_c: quadspi_bk1_io3_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_clk_pb2: quadspi_clk_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_ncs_pb6: quadspi_bk1_ncs_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_ncs_pb10: quadspi_bk1_ncs_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io0_pc9: quadspi_bk1_io0_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io1_pc10: quadspi_bk1_io1_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk2_ncs_pc11: quadspi_bk2_ncs_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io0_pd11: quadspi_bk1_io0_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io1_pd12: quadspi_bk1_io1_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io3_pd13: quadspi_bk1_io3_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io2_pe2: quadspi_bk1_io2_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk2_io0_pe7: quadspi_bk2_io0_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk2_io1_pe8: quadspi_bk2_io1_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk2_io2_pe9: quadspi_bk2_io2_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk2_io3_pe10: quadspi_bk2_io3_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io3_pf6: quadspi_bk1_io3_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io2_pf7: quadspi_bk1_io2_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io0_pf8: quadspi_bk1_io0_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_io1_pf9: quadspi_bk1_io1_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_clk_pf10: quadspi_clk_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk1_ncs_pg6: quadspi_bk1_ncs_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk2_io2_pg9: quadspi_bk2_io2_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk2_io3_pg14: quadspi_bk2_io3_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk2_io0_ph2: quadspi_bk2_io0_ph2 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ quadspi_bk2_io1_ph3: quadspi_bk2_io1_ph3 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ rcc_mco_1_pa8: rcc_mco_1_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ rcc_mco_2_pc9: rcc_mco_2_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ sai1_d1_pb2: sai1_d1_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_sd_a_pb2: sai1_sd_a_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_d1_pc1: sai1_d1_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_sd_a_pc1: sai1_sd_a_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_d3_pc5: sai1_d3_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_d1_pd6: sai1_d1_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_sd_a_pd6: sai1_sd_a_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_ck1_pe2: sai1_ck1_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_mclk_a_pe2: sai1_mclk_a_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_sd_b_pe3: sai1_sd_b_pe3 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_d2_pe4: sai1_d2_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_fs_a_pe4: sai1_fs_a_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_ck2_pe5: sai1_ck2_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_sck_a_pe5: sai1_sck_a_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_d1_pe6: sai1_d1_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_sd_a_pe6: sai1_sd_a_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_sd_b_pf6: sai1_sd_b_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_mclk_b_pf7: sai1_mclk_b_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_sck_b_pf8: sai1_sck_b_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_fs_b_pf9: sai1_fs_b_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_d3_pf10: sai1_d3_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai1_mclk_a_pg7: sai1_mclk_a_pg7 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sd_b_pa0: sai2_sd_b_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sd_b_pa0_c: sai2_sd_b_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_mclk_b_pa1: sai2_mclk_b_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_mclk_b_pa1_c: sai2_mclk_b_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sck_b_pa2: sai2_sck_b_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_fs_b_pa12: sai2_fs_b_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_fs_b_pc0: sai2_fs_b_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sd_a_pd11: sai2_sd_a_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_fs_a_pd12: sai2_fs_a_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sck_a_pd13: sai2_sck_a_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_mclk_a_pe0: sai2_mclk_a_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_mclk_b_pe6: sai2_mclk_b_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sd_b_pe11: sai2_sd_b_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sck_b_pe12: sai2_sck_b_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_fs_b_pe13: sai2_fs_b_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_mclk_b_pe14: sai2_mclk_b_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sd_b_pf11: sai2_sd_b_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_fs_b_pg9: sai2_fs_b_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sd_b_pg10: sai2_sd_b_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sck_b_ph2: sai2_sck_b_ph2 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_mclk_b_ph3: sai2_mclk_b_ph3 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_mclk_a_pi4: sai2_mclk_a_pi4 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sck_a_pi5: sai2_sck_a_pi5 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_sd_a_pi6: sai2_sd_a_pi6 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai2_fs_a_pi7: sai2_fs_a_pi7 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai3_sck_a_pd0: sai3_sck_a_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai3_sd_a_pd1: sai3_sd_a_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai3_fs_a_pd4: sai3_fs_a_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai3_sck_b_pd8: sai3_sck_b_pd8 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai3_sd_b_pd9: sai3_sd_b_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai3_fs_b_pd10: sai3_fs_b_pd10 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai3_mclk_b_pd14: sai3_mclk_b_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai3_mclk_a_pd15: sai3_mclk_a_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_d1_pb2: sai4_d1_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_sd_a_pb2: sai4_sd_a_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_d1_pc1: sai4_d1_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_sd_a_pc1: sai4_sd_a_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_d3_pc5: sai4_d3_pc5 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_d1_pd6: sai4_d1_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_sd_a_pd6: sai4_sd_a_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_ck1_pe2: sai4_ck1_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_mclk_a_pe2: sai4_mclk_a_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_sd_b_pe3: sai4_sd_b_pe3 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_d2_pe4: sai4_d2_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_fs_a_pe4: sai4_fs_a_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_ck2_pe5: sai4_ck2_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_sck_a_pe5: sai4_sck_a_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_d1_pe6: sai4_d1_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_sd_a_pe6: sai4_sd_a_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_sd_b_pf6: sai4_sd_b_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_mclk_b_pf7: sai4_mclk_b_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_sck_b_pf8: sai4_sck_b_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_fs_b_pf9: sai4_fs_b_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ sai4_d3_pf10: sai4_d3_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ sdmmc1_ckin_pb8: sdmmc1_ckin_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d4_pb8: sdmmc1_d4_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_cdir_pb9: sdmmc1_cdir_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d5_pb9: sdmmc1_d5_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d0dir_pc6: sdmmc1_d0dir_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d6_pc6: sdmmc1_d6_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d123dir_pc7: sdmmc1_d123dir_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d7_pc7: sdmmc1_d7_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d0_pc8: sdmmc1_d0_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d1_pc9: sdmmc1_d1_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d2_pc10: sdmmc1_d2_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_d3_pc11: sdmmc1_d3_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_ck_pc12: sdmmc1_ck_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc1_cmd_pd2: sdmmc1_cmd_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_cmd_pa0: sdmmc2_cmd_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_cmd_pa0_c: sdmmc2_cmd_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d2_pb3: sdmmc2_d2_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d3_pb4: sdmmc2_d3_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d4_pb8: sdmmc2_d4_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d5_pb9: sdmmc2_d5_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d0_pb14: sdmmc2_d0_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d1_pb15: sdmmc2_d1_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_ck_pc1: sdmmc2_ck_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d6_pc6: sdmmc2_d6_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d7_pc7: sdmmc2_d7_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_ck_pd6: sdmmc2_ck_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_cmd_pd7: sdmmc2_cmd_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ sdmmc2_d2_pg11: sdmmc2_d2_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    bias-pull-up;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ spi1_miso_pa6: spi1_miso_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pb4: spi1_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pg9: spi1_miso_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pb14: spi2_miso_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pc2: spi2_miso_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pc2_c: spi2_miso_pc2_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_pi2: spi2_miso_pi2 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pb4: spi3_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_miso_pc11: spi3_miso_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_miso_pe5: spi4_miso_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_miso_pe13: spi4_miso_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_miso_pf8: spi5_miso_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_miso_ph7: spi5_miso_ph7 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_miso_pj11: spi5_miso_pj11 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_miso_pa6: spi6_miso_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_miso_pb4: spi6_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_miso_pg12: spi6_miso_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_mosi_pa7: spi1_mosi_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pb5: spi1_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pd7: spi1_mosi_pd7 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pb15: spi2_mosi_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pc1: spi2_mosi_pc1 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pc3: spi2_mosi_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pc3_c: spi2_mosi_pc3_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_mosi_pi3: spi2_mosi_pi3 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pb2: spi3_mosi_pb2 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pb5: spi3_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pc12: spi3_mosi_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi3_mosi_pd6: spi3_mosi_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_mosi_pe6: spi4_mosi_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi4_mosi_pe14: spi4_mosi_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_mosi_pf9: spi5_mosi_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_mosi_pf11: spi5_mosi_pf11 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi5_mosi_pj10: spi5_mosi_pj10 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_mosi_pa7: spi6_mosi_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_mosi_pb5: spi6_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi6_mosi_pg14: spi6_mosi_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_nss_pa4: spi1_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pa15: spi1_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pg10: spi1_nss_pg10 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pa11: spi2_nss_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb4: spi2_nss_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb9: spi2_nss_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pb12: spi2_nss_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_pi0: spi2_nss_pi0 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pa4: spi3_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi3_nss_pa15: spi3_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi4_nss_pe4: spi4_nss_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi4_nss_pe11: spi4_nss_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi5_nss_pf6: spi5_nss_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi5_nss_ph5: spi5_nss_ph5 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi5_nss_pk1: spi5_nss_pk1 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi6_nss_pa4: spi6_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi6_nss_pa15: spi6_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi6_nss_pg8: spi6_nss_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ spi1_sck_pa5: spi1_sck_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pb3: spi1_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pg11: spi1_sck_pg11 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pa9: spi2_sck_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pa12: spi2_sck_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pb10: spi2_sck_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pb13: spi2_sck_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pd3: spi2_sck_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi2_sck_pi1: spi2_sck_pi1 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pb3: spi3_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi3_sck_pc10: spi3_sck_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi4_sck_pe2: spi4_sck_pe2 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi4_sck_pe12: spi4_sck_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi5_sck_pf7: spi5_sck_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi5_sck_ph6: spi5_sck_ph6 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi5_sck_pk0: spi5_sck_pk0 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi6_sck_pa5: spi6_sck_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi6_sck_pb3: spi6_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi6_sck_pg13: spi6_sck_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ tim1_bkin_pa6: tim1_bkin_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin_pb12: tim1_bkin_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin2_pe6: tim1_bkin2_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin_pe15: tim1_bkin_pe15 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin2_pg4: tim1_bkin2_pg4 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_bkin_pk2: tim1_bkin_pk2 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_bkin_pa0: tim15_bkin_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_bkin_pa0_c: tim15_bkin_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_bkin_pe3: tim15_bkin_pe3 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_bkin_pb4: tim16_bkin_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_bkin_pf10: tim16_bkin_pf10 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_bkin_pb5: tim17_bkin_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_bkin_pg6: tim17_bkin_pg6 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin_pa6: tim8_bkin_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin2_pa8: tim8_bkin2_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin_pg2: tim8_bkin_pg2 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin2_pg3: tim8_bkin2_pg3 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin2_pi1: tim8_bkin2_pi1 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin_pi4: tim8_bkin_pi4 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_bkin_pk2: tim8_bkin_pk2 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ tim1_ch1n_pa7: tim1_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pa8: tim1_ch1_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pa9: tim1_ch2_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pa10: tim1_ch3_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pa11: tim1_ch4_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb0: tim1_ch2n_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb1: tim1_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pb13: tim1_ch1n_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb14: tim1_ch2n_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb15: tim1_ch3n_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pe8: tim1_ch1n_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pe9: tim1_ch1_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pe10: tim1_ch2n_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pe11: tim1_ch2_pe11 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pe12: tim1_ch3n_pe12 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pe13: tim1_ch3_pe13 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pe14: tim1_ch4_pe14 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pj8: tim1_ch3n_pj8 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pj9: tim1_ch3_pj9 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pj10: tim1_ch2n_pj10 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pj11: tim1_ch2_pj11 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pk0: tim1_ch1n_pk0 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pk1: tim1_ch1_pk1 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa0: tim2_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa0_c: tim2_ch1_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pa1: tim2_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pa1_c: tim2_ch2_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pa2: tim2_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pa3: tim2_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa5: tim2_ch1_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa15: tim2_ch1_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pb3: tim2_ch2_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pb10: tim2_ch3_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pb11: tim2_ch4_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim12_ch1_pb14: tim12_ch1_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim12_ch2_pb15: tim12_ch2_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim12_ch1_ph6: tim12_ch1_ph6 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim12_ch2_ph9: tim12_ch2_ph9 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim13_ch1_pa6: tim13_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pa6: tim3_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pa7: tim3_ch2_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pb0: tim3_ch3_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pb1: tim3_ch4_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pb4: tim3_ch1_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pb5: tim3_ch2_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pc6: tim3_ch1_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pc7: tim3_ch2_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pc8: tim3_ch3_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pc9: tim3_ch4_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim13_ch1_pf8: tim13_ch1_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pa7: tim14_ch1_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pb6: tim4_ch1_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pb7: tim4_ch2_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pb8: tim4_ch3_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pb9: tim4_ch4_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pd12: tim4_ch1_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pd13: tim4_ch2_pd13 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pd14: tim4_ch3_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pd15: tim4_ch4_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pf9: tim14_ch1_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x9) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch1_pa0: tim5_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch1_pa0_c: tim5_ch1_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1n_pa1: tim15_ch1n_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch2_pa1: tim5_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1n_pa1_c: tim15_ch1n_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch2_pa1_c: tim5_ch2_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1_pa2: tim15_ch1_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch3_pa2: tim5_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch2_pa3: tim15_ch2_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch4_pa3: tim5_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1n_pe4: tim15_ch1n_pe4 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch1_pe5: tim15_ch1_pe5 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim15_ch2_pe6: tim15_ch2_pe6 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch1_ph10: tim5_ch1_ph10 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch2_ph11: tim5_ch2_ph11 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch3_ph12: tim5_ch3_ph12 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim5_ch4_pi0: tim5_ch4_pi0 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1n_pb6: tim16_ch1n_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1_pb8: tim16_ch1_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1_pf6: tim16_ch1_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1n_pf8: tim16_ch1n_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1n_pb7: tim17_ch1n_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1_pb9: tim17_ch1_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1_pf7: tim17_ch1_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1n_pf9: tim17_ch1n_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_pa5: tim8_ch1n_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_pa7: tim8_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_pb0: tim8_ch2n_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_pb1: tim8_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_pb14: tim8_ch2n_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_pb15: tim8_ch3n_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1_pc6: tim8_ch1_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2_pc7: tim8_ch2_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3_pc8: tim8_ch3_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4_pc9: tim8_ch4_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_ph13: tim8_ch1n_ph13 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_ph14: tim8_ch2n_ph14 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_ph15: tim8_ch3n_ph15 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch4_pi2: tim8_ch4_pi2 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1_pi5: tim8_ch1_pi5 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2_pi6: tim8_ch2_pi6 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3_pi7: tim8_ch3_pi7 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2_pj6: tim8_ch2_pj6 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_pj7: tim8_ch2n_pj7 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1_pj8: tim8_ch1_pj8 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch1n_pj9: tim8_ch1n_pj9 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2_pj10: tim8_ch2_pj10 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch2n_pj11: tim8_ch2n_pj11 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3_pk0: tim8_ch3_pk0 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim8_ch3n_pk1: tim8_ch3n_pk1 {
    pinmux = <((((('K') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ lpuart1_cts_pa11: lpuart1_cts_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_cts_pa11: usart1_cts_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_cts_pa0: usart2_cts_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_cts_pa0_c: usart2_cts_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_cts_pd3: usart2_cts_pd3 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_cts_pb13: usart3_cts_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_cts_pd11: usart3_cts_pd11 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_cts_pb0: uart4_cts_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_cts_pb15: uart4_cts_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart5_cts_pc9: uart5_cts_pc9 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart6_cts_pg13: usart6_cts_pg13 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart6_cts_pg15: usart6_cts_pg15 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart7_cts_pe10: uart7_cts_pe10 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart7_cts_pf9: uart7_cts_pf9 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart8_cts_pd14: uart8_cts_pd14 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ lpuart1_de_pa12: lpuart1_de_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart1_de_pa12: usart1_de_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart2_de_pa1: usart2_de_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart2_de_pa1_c: usart2_de_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart2_de_pd4: usart2_de_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart3_de_pb14: usart3_de_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart3_de_pd12: usart3_de_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart4_de_pa15: uart4_de_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart4_de_pb14: uart4_de_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart5_de_pc8: uart5_de_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart6_de_pg8: usart6_de_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart6_de_pg12: usart6_de_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart7_de_pe9: uart7_de_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart7_de_pf8: uart7_de_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart8_de_pd15: uart8_de_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };



   /omit-if-no-ref/ lpuart1_rts_pa12: lpuart1_rts_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart1_rts_pa12: usart1_rts_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart2_rts_pa1: usart2_rts_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart2_rts_pa1_c: usart2_rts_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart2_rts_pd4: usart2_rts_pd4 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart3_rts_pb14: usart3_rts_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart3_rts_pd12: usart3_rts_pd12 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart4_rts_pa15: uart4_rts_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart4_rts_pb14: uart4_rts_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart5_rts_pc8: uart5_rts_pc8 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart6_rts_pg8: usart6_rts_pg8 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart6_rts_pg12: usart6_rts_pg12 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart7_rts_pe9: uart7_rts_pe9 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart7_rts_pf8: uart7_rts_pf8 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ uart8_rts_pd15: uart8_rts_pd15 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    drive-push-pull;
   };



   /omit-if-no-ref/ lpuart1_rx_pa10: lpuart1_rx_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pa10: usart1_rx_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ lpuart1_rx_pb7: lpuart1_rx_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pb7: usart1_rx_pb7 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pb15: usart1_rx_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pa3: usart2_rx_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pd6: usart2_rx_pd6 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pb11: usart3_rx_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pc11: usart3_rx_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart3_rx_pd9: usart3_rx_pd9 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pa1: uart4_rx_pa1 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pa1_c: uart4_rx_pa1_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pa11: uart4_rx_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pb8: uart4_rx_pb8 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pc11: uart4_rx_pc11 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pd0: uart4_rx_pd0 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_ph14: uart4_rx_ph14 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart4_rx_pi9: uart4_rx_pi9 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart5_rx_pb5: uart5_rx_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart5_rx_pb12: uart5_rx_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart5_rx_pd2: uart5_rx_pd2 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart6_rx_pc7: usart6_rx_pc7 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart6_rx_pg9: usart6_rx_pg9 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart7_rx_pa8: uart7_rx_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart7_rx_pb3: uart7_rx_pb3 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart7_rx_pe7: uart7_rx_pe7 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart7_rx_pf6: uart7_rx_pf6 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart8_rx_pe0: uart8_rx_pe0 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ uart8_rx_pj9: uart8_rx_pj9 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ lpuart1_tx_pa9: lpuart1_tx_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x3) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pa9: usart1_tx_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ lpuart1_tx_pb6: lpuart1_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pb6: usart1_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pb14: usart1_tx_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pa2: usart2_tx_pa2 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pd5: usart2_tx_pd5 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pb10: usart3_tx_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pc10: usart3_tx_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart3_tx_pd8: usart3_tx_pd8 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pa0: uart4_tx_pa0 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pa0_c: uart4_tx_pa0_c {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pa12: uart4_tx_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x6) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pb9: uart4_tx_pb9 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pc10: uart4_tx_pc10 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_pd1: uart4_tx_pd1 {
    pinmux = <((((('D') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart4_tx_ph13: uart4_tx_ph13 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart5_tx_pb6: uart5_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart5_tx_pb13: uart5_tx_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xe) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart5_tx_pc12: uart5_tx_pc12 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart6_tx_pc6: usart6_tx_pc6 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((6) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart6_tx_pg14: usart6_tx_pg14 {
    pinmux = <((((('G') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart7_tx_pa15: uart7_tx_pa15 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart7_tx_pb4: uart7_tx_pb4 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xb) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart7_tx_pe8: uart7_tx_pe8 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart7_tx_pf7: uart7_tx_pf7 {
    pinmux = <((((('F') - 'A') & 0x1FU) << 9U) | (((7) & 0xFU) << 5U) | (((0x7) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart8_tx_pe1: uart8_tx_pe1 {
    pinmux = <((((('E') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ uart8_tx_pj8: uart8_tx_pj8 {
    pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ usb_otg_fs_sof_pa8: usb_otg_fs_sof_pa8 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_vbus_pa9: usb_otg_fs_vbus_pa9 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_id_pa10: usb_otg_fs_id_pa10 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_dm_pa11: usb_otg_fs_dm_pa11 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_fs_dp_pa12: usb_otg_fs_dp_pa12 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usb_otg_hs_sof_pa4: usb_otg_hs_sof_pa4 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_hs_id_pb12: usb_otg_hs_id_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_hs_vbus_pb13: usb_otg_hs_vbus_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_hs_dm_pb14: usb_otg_hs_dm_pb14 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((14) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_otg_hs_dp_pb15: usb_otg_hs_dp_pb15 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((15) & 0xFU) << 5U) | (((0xc) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usb_otg_hs_ulpi_d0_pa3: usb_otg_hs_ulpi_d0_pa3 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_ck_pa5: usb_otg_hs_ulpi_ck_pa5 {
    pinmux = <((((('A') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d1_pb0: usb_otg_hs_ulpi_d1_pb0 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d2_pb1: usb_otg_hs_ulpi_d2_pb1 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((1) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d7_pb5: usb_otg_hs_ulpi_d7_pb5 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((5) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d3_pb10: usb_otg_hs_ulpi_d3_pb10 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((10) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d4_pb11: usb_otg_hs_ulpi_d4_pb11 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d5_pb12: usb_otg_hs_ulpi_d5_pb12 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((12) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_d6_pb13: usb_otg_hs_ulpi_d6_pb13 {
    pinmux = <((((('B') - 'A') & 0x1FU) << 9U) | (((13) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_stp_pc0: usb_otg_hs_ulpi_stp_pc0 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((0) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_dir_pc2: usb_otg_hs_ulpi_dir_pc2 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_dir_pc2_c: usb_otg_hs_ulpi_dir_pc2_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((2) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_nxt_pc3: usb_otg_hs_ulpi_nxt_pc3 {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_nxt_pc3_c: usb_otg_hs_ulpi_nxt_pc3_c {
    pinmux = <((((('C') - 'A') & 0x1FU) << 9U) | (((3) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_nxt_ph4: usb_otg_hs_ulpi_nxt_ph4 {
    pinmux = <((((('H') - 'A') & 0x1FU) << 9U) | (((4) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

   /omit-if-no-ref/ usb_otg_hs_ulpi_dir_pi11: usb_otg_hs_ulpi_dir_pi11 {
    pinmux = <((((('I') - 'A') & 0x1FU) << 9U) | (((11) & 0xFU) << 5U) | (((0xa) & 0x1FU) << 0U))>;
    slew-rate = "high-speed";
   };

  };
 };
};
# 10 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/stm32h747i_disco_stm32h747xx_m7.dts" 2

# 1 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/stm32h747i_disco.dtsi" 1






# 1 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/arduino_r3_connector.dtsi" 1






/ {
 arduino_header: connector {
  compatible = "arduino-header-r3";
  #gpio-cells = <2>;
  gpio-map-mask = <0xffffffff 0xffffffc0>;
  gpio-map-pass-thru = <0 0x3f>;
  gpio-map = <0 0 &gpioa 4 0>,
      <1 0 &gpiof 10 0>,
      <2 0 &gpioa 0 0>,
      <3 0 &gpioa 1 0>,
      <4 0 &gpioc 2 0>,
      <5 0 &gpioc 3 0>,
      <6 0 &gpioj 9 0>,
      <7 0 &gpioj 8 0>,
      <8 0 &gpioj 3 0>,
      <9 0 &gpiof 8 0>,
      <10 0 &gpioj 4 0>,
      <11 0 &gpioa 6 0>,
      <12 0 &gpioj 7 0>,
      <13 0 &gpioj 0 0>,
      <14 0 &gpioj 5 0>,
      <15 0 &gpioj 6 0>,
      <16 0 &gpiok 1 0>,
      <17 0 &gpioj 10 0>,
      <18 0 &gpioj 11 0>,
      <19 0 &gpiok 0 0>,
      <20 0 &gpiod 13 0>,
      <21 0 &gpiod 12 0>;
 };
};
# 8 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/stm32h747i_disco.dtsi" 2
# 1 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/pmod_connector.dtsi" 1






/ {
 pmod0: pmod-connector {
  compatible = "digilent,pmod";
  #gpio-cells = <2>;
  gpio-map-mask = <0xffffffff 0xffffffc0>;
  gpio-map-pass-thru = <0 0x3f>;
  gpio-map = <0 0 &gpioa 11 0>,
      <1 0 &gpioc 3 0>,
      <2 0 &gpioc 2 0>,
      <3 0 &gpioa 12 0>,
      <4 0 &gpioc 6 0>,
      <5 0 &gpioj 13 0>;


 };
};
# 9 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/stm32h747i_disco.dtsi" 2
# 1 "C:/Work/zephyrproject/zephyr/include/zephyr/dt-bindings/input/input-event-codes.h" 1 3 4
# 10 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/stm32h747i_disco.dtsi" 2

/ {
 leds {
  compatible = "gpio-leds";

  green_led_1:led_1 {
   gpios = <&gpioi 12 (1 << 0)>;
   label = "User LD1";
   status = "disabled";
  };

  orange_led_2:led_2 {
   gpios = <&gpioi 13 (1 << 0)>;
   label = "User LD2";
   status = "disabled";
  };

  red_led_3:led_3 {
   gpios = <&gpioi 14 (1 << 0)>;
   label = "User LD3";
   status = "disabled";
  };

  blue_led_4:led_4 {
   gpios = <&gpioi 15 (1 << 0)>;
   label = "User LD4";
   status = "disabled";
  };
 };

 gpio_keys {
  compatible = "gpio-keys";

  wake_up: button {
   label = "Wakeup";
   gpios = <&gpioc 13 (0 << 0)>;
   status = "disabled";
   zephyr,code = <143>;
  };

  joy_center: joystick_center {
   label = "joystick center";
   gpios = <&gpiok 2 ((1 << 0) | (1 << 4))>;
   status = "disabled";
   zephyr,code = <28>;
  };

  joy_down: joystick_down {
   label = "joystick down";
   gpios = <&gpiok 3 ((1 << 0) | (1 << 4))>;
   status = "disabled";
   zephyr,code = <108>;
  };

  joy_up: joystick_up {
   label = "joystick up";
   gpios = <&gpiok 6 ((1 << 0) | (1 << 4))>;
   status = "disabled";
   zephyr,code = <103>;
  };

  joy_left: joystick_left {
   label = "joystick left";
   gpios = <&gpiok 4 ((1 << 0) | (1 << 4))>;
   status = "disabled";
   zephyr,code = <105>;
  };

  joy_right: joystick_right {
   label = "joystick right";
   gpios = <&gpiok 5 ((1 << 0) | (1 << 4))>;
   status = "disabled";
   zephyr,code = <106>;
  };
 };

 dsi_lcd_qsh_030: connector_dsi_lcd {
  compatible = "st,dsi-lcd-qsh-030";
  #gpio-cells = <2>;
  gpio-map-mask = <0xffffffff 0xffffffc0>;
  gpio-map-pass-thru = <0 0x3f>;
  gpio-map = <4 0 &gpiok 7 0>,
      <35 0 &gpioe 5 0>,
      <37 0 &gpioe 4 0>,
      <39 0 &gpioe 6 0>,
      <40 0 &gpiod 13 0>,
      <44 0 &gpiod 12 0>,
      <45 0 &gpioa 8 0>,
      <47 0 &gpiob 6 0>,
      <49 0 &gpioj 2 0>,
      <53 0 &gpioj 12 0>,
      <57 0 &gpiog 3 0>;
 };
};

&rcc {
 d1cpre = <1>;
 hpre = <2>;
 d1ppre = <2>;
 d2ppre1 = <2>;
 d2ppre2 = <2>;
 d3ppre = <2>;
};

&usart1 {
 pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
 pinctrl-names = "default";
 current-speed = <115200>;
};

&uart8 {
 pinctrl-0 = <&uart8_tx_pj8 &uart8_rx_pj9>;
 pinctrl-names = "default";
 current-speed = <115200>;
};

&spi5 {
 pinctrl-0 = <&spi5_nss_pk1 &spi5_sck_pk0
       &spi5_miso_pj11 &spi5_mosi_pj10>;
 pinctrl-names = "default";
};

&mailbox {
 status = "okay";
};
# 12 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/stm32h747i_disco_stm32h747xx_m7.dts" 2

/ {
 model = "STMicroelectronics STM32H747I DISCOVERY board";
 compatible = "st,stm32h747i-disco";


 chosen {
  zephyr,console = &usart1;
  zephyr,shell-uart = &usart1;
  zephyr,sram = &sram0;
  zephyr,flash = &flash0;
  zephyr,flash-controller = &mt25ql512ab1;
 };

 sdram2: sdram@d0000000 {
  compatible = "zephyr,memory-region", "mmio-sram";
  device_type = "memory";
  reg = <0xd0000000 (((32) * 1024) * 1024)>;
  zephyr,memory-region = "SDRAM2";
  zephyr,memory-attr = <( (((1UL << (0))) << (20)) )>;
 };

 ext_memory: memory@90000000 {
  compatible = "zephyr,memory-region";
  reg = <0x90000000 (((64) * 1024) * 1024)>;
  zephyr,memory-region = "EXTMEM";

  zephyr,memory-attr = <( (((1UL << (4))) << (20)) )>;
 };

 leds {
  green_led_1:led_1 {
   status = "okay";
  };

  orange_led_2:led_2 {
   status = "okay";
  };
 };

 gpio_keys {
  wake_up: button {
   status = "okay";
  };
 };

 otghs_ulpi_phy: otghs_ulpis_phy {
  compatible = "usb-ulpi-phy";
  #phy-cells = <0>;
 };

 aliases {
  led0 = &green_led_1;
  led1 = &orange_led_2;
  sw0 = &wake_up;
 };
};

&clk_hse {
 clock-frequency = <(((25) * 1000) * 1000)>;
 status = "okay";
};

&clk_hsi48 {
 status = "okay";
};

&pll {
 div-m = <5>;
 mul-n = <160>;
 div-p = <2>;
 div-q = <4>;
 div-r = <2>;
 clocks = <&clk_hse>;
 status = "okay";
};

&pll2 {
 div-m = <5>;
 mul-n = <96>;
 div-p = <2>;
 div-q = <4>;
 div-r = <10>;
 clocks = <&clk_hse>;
 status = "okay";
};

&rcc {
 clocks = <&pll>;
 clock-frequency = <(((400) * 1000) * 1000)>;
};

&usart1 {
 status = "okay";
};

&uart8 {

};

&spi5 {
 status = "okay";
};

&flash0 {
 partitions {
  compatible = "fixed-partitions";
  #address-cells = <1>;
  #size-cells = <1>;


  storage_partition: partition@ff800 {
   label = "storage";
   reg = <0x000ff800 ((2) * 1024)>;
  };
 };
};

&mac {
# 139 "C:/Work/zephyrproject/zephyr/boards/st/stm32h747i_disco/stm32h747i_disco_stm32h747xx_m7.dts"
 status = "okay";
 pinctrl-0 = <&eth_ref_clk_pa1
       &eth_crs_dv_pa7
       &eth_rxd0_pc4
       &eth_rxd1_pc5
       &eth_tx_en_pg11
       &eth_txd0_pg13
       &eth_txd1_pg12>;
 pinctrl-names = "default";
 phy-connection-type = "rmii";
 phy-handle = <&eth_phy>;
};

&mdio {
 status = "okay";
 pinctrl-0 = <&eth_mdio_pa2 &eth_mdc_pc1>;
 pinctrl-names = "default";

 eth_phy: ethernet-phy@0 {
  compatible = "ethernet-phy";
  reg = <0x00>;
 };
};

&rng {
 status = "okay";
};

&fmc {
 status = "okay";
 pinctrl-0 = <&fmc_nbl0_pe0 &fmc_nbl1_pe1 &fmc_nbl2_pi4 &fmc_nbl3_pi5
       &fmc_sdclk_pg8 &fmc_sdnwe_ph5 &fmc_sdcke1_ph7
       &fmc_sdne1_ph6 &fmc_sdnras_pf11 &fmc_sdncas_pg15
       &fmc_a0_pf0 &fmc_a1_pf1 &fmc_a2_pf2 &fmc_a3_pf3 &fmc_a4_pf4
       &fmc_a5_pf5 &fmc_a6_pf12 &fmc_a7_pf13 &fmc_a8_pf14
       &fmc_a9_pf15 &fmc_a10_pg0 &fmc_a11_pg1 &fmc_a12_pg2
       &fmc_a14_pg4 &fmc_a15_pg5 &fmc_d0_pd14 &fmc_d1_pd15
       &fmc_d2_pd0 &fmc_d3_pd1 &fmc_d4_pe7 &fmc_d5_pe8 &fmc_d6_pe9
       &fmc_d7_pe10 &fmc_d8_pe11 &fmc_d9_pe12 &fmc_d10_pe13
       &fmc_d11_pe14 &fmc_d12_pe15 &fmc_d13_pd8 &fmc_d14_pd9
       &fmc_d15_pd10 &fmc_d16_ph8 &fmc_d17_ph9 &fmc_d18_ph10
       &fmc_d19_ph11 &fmc_d20_ph12 &fmc_d21_ph13 &fmc_d22_ph14
       &fmc_d23_ph15 &fmc_d24_pi0 &fmc_d25_pi1 &fmc_d26_pi2
       &fmc_d27_pi3 &fmc_d28_pi6 &fmc_d29_pi7 &fmc_d30_pi9
       &fmc_d31_pi10>;
 pinctrl-names = "default";

 sdram {
  status = "okay";

  power-up-delay = <100>;
  num-auto-refresh = <8>;
  mode-register = <0x220>;
  refresh-rate = <603>;

  bank@1 {
   reg = <1>;

   st,sdram-control = <0x00000001UL
         0x00000004UL
         0x00000020UL
         0x00000040UL
         0x00000100UL
         0x00000800UL
         0x00001000UL
         0x00000000UL>;
   st,sdram-timing = <2 6 4 6 2 2 2>;
  };
 };
};

zephyr_udc0: &usbotg_hs {
 pinctrl-0 = <&usb_otg_hs_ulpi_ck_pa5
   &usb_otg_hs_ulpi_d0_pa3
   &usb_otg_hs_ulpi_d1_pb0
   &usb_otg_hs_ulpi_d2_pb1
   &usb_otg_hs_ulpi_d3_pb10
   &usb_otg_hs_ulpi_d4_pb11
   &usb_otg_hs_ulpi_d5_pb12
   &usb_otg_hs_ulpi_d6_pb13
   &usb_otg_hs_ulpi_d7_pb5
   &usb_otg_hs_ulpi_stp_pc0
   &usb_otg_hs_ulpi_dir_pi11
   &usb_otg_hs_ulpi_nxt_ph4>;
 pinctrl-names = "default";
 maximum-speed = "high-speed";

 clocks = <&rcc 0x0D8 0x06000000>,
   <&rcc ((0x003 + 1) + 1) ((((0x54) & 0xFFFFU) << 0U) | (((20) & 0x3FU) << 16U) | (((3) & 0x1FU) << 22U) | ((((3)) & 0x1FU) << 27U))>;
 phys = <&otghs_ulpi_phy>;
 status = "okay";
};

&sdmmc1 {
 status = "okay";
 clocks = <&rcc (0x0D4) (1 << 16)>,
   <&rcc ((((((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 1) ((((0x4C) & 0xFFFFU) << 0U) | (((16) & 0x3FU) << 16U) | (((1) & 0x1FU) << 22U) | ((((1)) & 0x1FU) << 27U))>;
 pinctrl-0 = <&sdmmc1_d0_pc8 &sdmmc1_d1_pc9
   &sdmmc1_d2_pc10 &sdmmc1_d3_pc11
   &sdmmc1_d4_pb8 &sdmmc1_d5_pb9
   &sdmmc1_d6_pc6 &sdmmc1_d7_pc7
   &sdmmc1_ck_pc12 &sdmmc1_cmd_pd2>;
 pinctrl-names = "default";
 cd-gpios = <&gpioi 8 (1 << 0)>;
 disk-name = "SD";
};

&quadspi {
 pinctrl-0 = <&quadspi_clk_pb2 &quadspi_bk1_ncs_pg6
       &quadspi_bk1_io0_pd11 &quadspi_bk1_io1_pf9
       &quadspi_bk1_io2_pf7 &quadspi_bk1_io3_pf6
       &quadspi_bk2_io0_ph2 &quadspi_bk2_io1_ph3
       &quadspi_bk2_io2_pg9 &quadspi_bk2_io3_pg14>;
 pinctrl-names = "default";
 dual-flash;
 status = "okay";

 mt25ql512ab1: qspi-nor-flash-1@0 {
  compatible = "st,stm32-qspi-nor";
  reg = <0>;
  size = <(((512) * 1024) * 1024)>;
  qspi-max-frequency = <72000000>;
  cs-high-time = <4>;
  spi-bus-width = <4>;
  reset-cmd;
  status = "okay";

  partitions {
   compatible = "fixed-partitions";
   #address-cells = <1>;
   #size-cells = <1>;

   partition@0 {
    reg = <0x0 (((64) * 1024) * 1024)>;
   };
  };
 };

 mt25ql512ab2: qspi-nor-flash-2@0 {
  compatible = "st,stm32-qspi-nor";
  reg = <0>;
  size = <(((512) * 1024) * 1024)>;
  qspi-max-frequency = <72000000>;
  status = "okay";
 };
};

arduino_spi: &spi5 {};


qsh_030_i2c: &i2c4 {
 pinctrl-0 = <&i2c4_scl_pd12 &i2c4_sda_pd13>;
 pinctrl-names = "default";
 clock-frequency = <400000>;
 status = "okay";
};


zephyr_mipi_dsi: &mipi_dsi {};


zephyr_lcd_controller: &ltdc {};
# 0 "<command-line>" 2
# 1 "C:/Work/zephyrproject/zephyr/boards/shields/st_b_lcd40_dsi1_mb1166/st_b_lcd40_dsi1_mb1166_a09.overlay" 1
# 9 "C:/Work/zephyrproject/zephyr/boards/shields/st_b_lcd40_dsi1_mb1166/st_b_lcd40_dsi1_mb1166_a09.overlay"
/ {
 lvgl_pointer {
  compatible = "zephyr,lvgl-pointer-input";
  input = <&ft5336>;
  invert-y;
 };

 chosen {
  zephyr,display = &zephyr_lcd_controller;
 };
};

&zephyr_mipi_dsi {
 status = "okay";
 nt35510: nt35510@0 {
  status = "okay";
  compatible = "frida,nt35510";
  reg = <0x0>;
  height = <800>;
  width = <480>;
  reset-gpios = <&dsi_lcd_qsh_030 57 (0 << 0)>;
  bl-gpios = <&dsi_lcd_qsh_030 53 (0 << 0)>;
  data-lanes = <2>;
  pixel-format = <0U>;
  rotation = <90>;
 };
};

&zephyr_lcd_controller {
 status = "okay";
 width = <800>;
 height = <480>;
 pixel-format = <(0x1 << 0)>;

 display-timings {
  compatible = "zephyr,panel-timing";
  hsync-active = <0>;
  vsync-active = <0>;
  de-active = <0>;
  pixelclk-active = <0>;
  hsync-len = <2>;
  vsync-len = <120>;
  hback-porch = <34>;
  vback-porch = <150>;
  hfront-porch = <34>;
  vfront-porch = <150>;
 };
};

&qsh_030_i2c {
 ft5336: ft5336@38 {
  compatible = "focaltech,ft5336";
  reg = <0x38>;
  int-gpios = <&dsi_lcd_qsh_030 4 (1 << 0)>;
  status = "okay";
 };
};
# 0 "<command-line>" 2
# 1 "C:/Work/zephyrproject/zephyr/boards/shields/st_b_lcd40_dsi1_mb1166/boards/stm32h747i_disco_stm32h747xx_m7.overlay" 1






&sdram2 {

 zephyr,memory-attr = <( (((1UL << (1))) << (20)) )>;
};

&zephyr_lcd_controller {
 status = "okay";
 ext-sdram = <&sdram2>;
 def-back-color-red = <0>;
 def-back-color-green = <0>;
 def-back-color-blue = <0>;
};


&pll3 {
 status = "okay";
 clocks = <&clk_hse>;
 div-m = <5>;
 mul-n = <132>;
 div-p = <2>;
 div-q = <2>;
 div-r = <24>;
};

&zephyr_mipi_dsi {
 status = "okay";






 pll-ndiv = <100>;
 pll-idf = <5>;
 pll-odf = <0>;

 vs-active-high;
 hs-active-high;
 de-active-high;
};
# 0 "<command-line>" 2
# 1 "C:/Work/zephyrproject/zephyr/boards/shields/st_b_lcd40_dsi1_mb1166/boards/st_b_lcd40_dsi1_mb1166_a09/stm32h747i_disco_stm32h747xx_m7.overlay" 1






&zephyr_mipi_dsi {
 status = "okay";
 loosely-packed;
 largest-packet-size = <64>;
 bta-ack-disable;
};
# 0 "<command-line>" 2
# 1 "C:/Work/zephyrproject/stm32-rs485/boards/stm32h747i_disco_stm32h747xx_m7.overlay" 1
/ {
    chosen {
        zephyr,console = &usart1;
    };
};


&gpioj { status = "okay"; };


&pinctrl {
    uart8_tx_pj8: uart8_tx_pj8 {
        pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((8) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    };
    uart8_rx_pj9: uart8_rx_pj9 {
        pinmux = <((((('J') - 'A') & 0x1FU) << 9U) | (((9) & 0xFU) << 5U) | (((0x8) & 0x1FU) << 0U))>;
    };
};

&uart8 {
    status = "okay";
    current-speed = <19200>;
    pinctrl-0 = <&uart8_tx_pj8 &uart8_rx_pj9>;
    pinctrl-names = "default";
};


&ltdc {
    status = "okay";
};
# 0 "<command-line>" 2
# 1 "C:/Work/zephyrproject/zephyr/misc/empty_file.c"
